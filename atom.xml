<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>随变</title>
  
  <subtitle>やばり私は日本語が大好き</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://summerangel.github.io/"/>
  <updated>2018-12-12T14:44:31.044Z</updated>
  <id>https://summerangel.github.io/</id>
  
  <author>
    <name>summer</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>static-project-deploy</title>
    <link href="https://summerangel.github.io/2018/12/12/static-project-deploy/"/>
    <id>https://summerangel.github.io/2018/12/12/static-project-deploy/</id>
    <published>2018-12-12T13:33:34.000Z</published>
    <updated>2018-12-12T14:44:31.044Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><p>It’s easily to forget,so record the steps when deploy a static project which with no server side language node,more easily deployed than node.</p><h2 id="Get-your-ip-provided-by-server-cloud-provider"><a href="#Get-your-ip-provided-by-server-cloud-provider" class="headerlink" title="Get your ip provided by server cloud provider"></a>Get your ip provided by server cloud provider</h2><h4 id="how-to-get-ip"><a href="#how-to-get-ip" class="headerlink" title="how to get ip"></a>how to get ip</h4><p>I wrote one blog about how to buy and install related environments before,the name is ‘<a href="https://summerangel.github.io/2018/04/25/about-deploy/">How to deploy a website on Mac</a>‘.</p><h2 id="Steps"><a href="#Steps" class="headerlink" title="Steps"></a>Steps</h2><h3 id="1、Login-your-server-first"><a href="#1、Login-your-server-first" class="headerlink" title="1、Login your server first"></a>1、Login your server first</h3><p>open your terminal(terminal one):</p><blockquote><p>Use command line(just replace the ip with your own):<br><code>ssh -q -l root -p 22 94.191.27.xxx</code><br>then it will tip you to input your password</p></blockquote><h3 id="2、Copy-your-local-builded-project-into-your-server-machine"><a href="#2、Copy-your-local-builded-project-into-your-server-machine" class="headerlink" title="2、Copy your local builded project into your server machine"></a>2、Copy your local builded project into your server machine</h3><blockquote><p>the file should be with .txt or .zip,otherwise it will cause error.<br>open another terminal(terminal two),you can open it with the shortcut key <code>command n</code>,and the copy command line is:<br><code>scp -p 22 /User/summer/leisure/project/build.zip root@94.191.27.xxx:/root/html/</code><br>you can get the dir of your local project by the command <code>pwd</code></p></blockquote><h3 id="3、Back-to-terminal-one-and-go-to-the-dir-which-receive-the-copied-zip-with-the-command"><a href="#3、Back-to-terminal-one-and-go-to-the-dir-which-receive-the-copied-zip-with-the-command" class="headerlink" title="3、Back to terminal one, and go to the dir which receive the copied zip with the command"></a>3、Back to terminal one, and go to the dir which receive the copied zip with the command</h3><p><code>cd /root/html/</code></p><h3 id="4、unzip"><a href="#4、unzip" class="headerlink" title="4、unzip"></a>4、unzip</h3><p>Now we are in the dir of html,unzip the build.zip file with the command line:<br><code>unzip -o -d /root/html/ build.zip</code></p><blockquote><p>this means that unzip build.zip into dir /root/html<br>-o means cover the file with no hint<br>-d means unzip the file into the dir /root/html</p></blockquote><h2 id="End"><a href="#End" class="headerlink" title="End"></a>End</h2><p>I’m not familiar with nginx, so in the process of deploying, I was referring to the blog of <a href="https://segmentfault.com/a/1190000015685430" target="_blank" rel="noopener">This one</a>, and also met the problems mentioned in the article, just do as the author say.<br>So happy to make project display without running in local environment. </p><h4 id="provide-the-nginx-conf-file"><a href="#provide-the-nginx-conf-file" class="headerlink" title="provide the nginx.conf file"></a>provide the nginx.conf file</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">user root;</span><br><span class="line">worker_processes  <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  <span class="number">1024</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    include       mime.types;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line"></span><br><span class="line">    sendfile        on;</span><br><span class="line"></span><br><span class="line">    keepalive_timeout  <span class="number">65</span>;</span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        listen       <span class="number">80</span>;</span><br><span class="line">        server_name  localhost;</span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">            root   html;</span><br><span class="line">            index  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        location /card &#123;</span><br><span class="line">            alias /root/html/build;</span><br><span class="line">            index index.html index.htm;</span><br><span class="line">            try_files $uri $uri/ <span class="regexp">/card/i</span>ndex.html;</span><br><span class="line">        &#125;</span><br><span class="line">        error_page   <span class="number">500</span> <span class="number">502</span> <span class="number">503</span> <span class="number">504</span>  /<span class="number">50</span>x.html;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Introduction&quot;&gt;&lt;a href=&quot;#Introduction&quot; class=&quot;headerlink&quot; title=&quot;Introduction&quot;&gt;&lt;/a&gt;Introduction&lt;/h2&gt;&lt;p&gt;It’s easily to forget,so recor
      
    
    </summary>
    
    
      <category term="nginx、linux、server" scheme="https://summerangel.github.io/tags/nginx%E3%80%81linux%E3%80%81server/"/>
    
  </entry>
  
  <entry>
    <title>convenient that regular brings</title>
    <link href="https://summerangel.github.io/2018/11/30/convenient-regular-brings/"/>
    <id>https://summerangel.github.io/2018/11/30/convenient-regular-brings/</id>
    <published>2018-11-30T02:22:19.000Z</published>
    <updated>2018-11-30T03:45:34.509Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><p>Lately I was learning regular, as you know, I have recorded the note about regular in last blog, I’m crazy about regular in some extends,for every function I met in the project,the first solution I come out is using regular, and the time is coming.</p><h2 id="The-exciting-moment"><a href="#The-exciting-moment" class="headerlink" title="The exciting moment"></a>The exciting moment</h2><p>Since we front end developers in my company is cooperating with the developer of Android and Ios, they provide us with the webview and we develop the pages of h5, which is so called hybrid. Ok, no more useless words,the function is we need to decrypt the data fetched from backend interface,some fields in the data is encrypted for the security’s sake. Having known this, I suddenly think of regular, it can perfectly solve this problem, considering it for a moment, I consult with the backend developer, letting them create the fields expression special, so I can easily use regular.</p><h2 id="Show-the-code"><a href="#Show-the-code" class="headerlink" title="Show the code"></a>Show the code</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> decrypt = &#123;</span><br><span class="line">  decryptData(encryptedData, privateKey = PRIVATE_KEY) &#123;</span><br><span class="line">    <span class="keyword">var</span> decrypt = <span class="keyword">new</span> JSEncrypt();</span><br><span class="line">    decrypt.setPrivateKey(privateKey);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> str = <span class="string">'var '</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> key <span class="keyword">in</span> encryptedData) &#123;</span><br><span class="line">      str = str + key + <span class="string">'='</span> + decrypt.decrypt(encryptedData[key]) + <span class="string">','</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> str.replace(<span class="regexp">/,$/</span>, <span class="string">';'</span>);</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  getDecryptedDataFromNative(secretData, callback) &#123;</span><br><span class="line">    <span class="keyword">if</span> (isAndroid(USR_AGENT)) &#123;</span><br><span class="line">      getDecryptedDataFromAndroid(secretData, callback);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (isIOS(USR_AGENT)) &#123;</span><br><span class="line">      getDecryptedDataFromIOS(secretData, callback);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  packExpression(expressData) &#123;</span><br><span class="line">    <span class="keyword">var</span> str = <span class="built_in">JSON</span>.stringify(expressData);</span><br><span class="line">    <span class="keyword">return</span> str.replace(<span class="regexp">/"#/g</span>, <span class="string">'eval('</span>).replace(<span class="regexp">/#"/g</span>, <span class="string">')'</span>);</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 使用的时候直接调用这个方法，会返回加密后的数据，但是赋值的时候需要 数值.toFixed(2),这里没有处理；</span></span><br><span class="line"><span class="comment">   * @param data</span></span><br><span class="line"><span class="comment">   * @returns &#123;*&#125;</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  executeExpression(data) &#123;</span><br><span class="line">    <span class="comment">// 本地使用自己的解密方法</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">window</span>.location.hostname === <span class="string">'localhost'</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> secretData = data.secretData || data.encryptMap;</span><br><span class="line">        <span class="keyword">if</span> (!!secretData) &#123;</span><br><span class="line">          <span class="keyword">let</span> decryptData = <span class="keyword">this</span>.decryptData(secretData, PRIVATE_KEY);</span><br><span class="line">          <span class="comment">// 解密后将加密数据去掉，防止干扰后面的表达式封装</span></span><br><span class="line">          data[<span class="string">'secretData'</span>] = <span class="literal">undefined</span>;</span><br><span class="line">          <span class="keyword">let</span> expression = <span class="keyword">this</span>.packExpression(data);</span><br><span class="line">          <span class="keyword">var</span> temp = &#123;&#125;;</span><br><span class="line">          <span class="comment">// 执行</span></span><br><span class="line">          <span class="built_in">eval</span>(decryptData + <span class="string">'temp = '</span> + expression + <span class="string">';'</span>);</span><br><span class="line">          resolve(temp);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          resolve(data);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (!isEmpty(data.secretData)) &#123;</span><br><span class="line">          <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">var</span> str = <span class="built_in">JSON</span>.stringify(data);</span><br><span class="line">            <span class="keyword">let</span> expression = str.replace(<span class="regexp">/"#/g</span>, <span class="string">'eval('</span>).replace(<span class="regexp">/#"/g</span>, <span class="string">')'</span>);</span><br><span class="line">            <span class="keyword">this</span>.getDecryptedDataFromNative(data.secretData, <span class="function"><span class="keyword">function</span>(<span class="params">response</span>) </span>&#123;</span><br><span class="line">              <span class="keyword">let</span> decryptData = response; <span class="comment">// 接收原生返回的解密后数据</span></span><br><span class="line">              data[<span class="string">'secretData'</span>] = <span class="literal">undefined</span>;</span><br><span class="line">              <span class="keyword">var</span> temp = &#123;&#125;;</span><br><span class="line">              <span class="built_in">eval</span>(decryptData + <span class="string">'temp = '</span> + expression + <span class="string">';'</span>);</span><br><span class="line">              <span class="comment">// 执行</span></span><br><span class="line">              resolve(temp);</span><br><span class="line">            &#125;);</span><br><span class="line">          &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">            reject(e);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          resolve(data);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="Thanks"><a href="#Thanks" class="headerlink" title="Thanks"></a>Thanks</h2><p>At first, it is running smoothly in my local environment, but put it into the webview, a lot of problems come out, the tough one is, it is asynchronous to get the decrypted data from ios, I know it should be using Promise, but I don’t know where to put it in, it’s really sucks,furtunately, another colleague is good at it,helping me solved it.Here give my thanks to scopeWu and I really need to put some strength to understand promise deeply.</p><h2 id="In-the-end"><a href="#In-the-end" class="headerlink" title="In the end"></a>In the end</h2><p>Without complex loop and check, the regular makes it more convenient to achieve the goal.A little happy successfuly to made it. And there is a long way to go to be good at regular.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Introduction&quot;&gt;&lt;a href=&quot;#Introduction&quot; class=&quot;headerlink&quot; title=&quot;Introduction&quot;&gt;&lt;/a&gt;Introduction&lt;/h2&gt;&lt;p&gt;Lately I was learning regular,
      
    
    </summary>
    
    
      <category term="regular" scheme="https://summerangel.github.io/tags/regular/"/>
    
  </entry>
  
  <entry>
    <title>第1編の中国語ブログ - 正則について</title>
    <link href="https://summerangel.github.io/2018/11/18/about-regular/"/>
    <id>https://summerangel.github.io/2018/11/18/about-regular/</id>
    <published>2018-11-18T06:48:50.000Z</published>
    <updated>2018-11-18T07:12:12.773Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><p>This is an article about regular in chinese, for it is hard to understand, so it is better recorded in<br>mother language.This was learned from Mount Everest public class and this is to be continued. By the way,please forgive me to say that regular is really fabulous.</p><h2 id="正则"><a href="#正则" class="headerlink" title="正则"></a>正则</h2><h4 id="什么是正则？"><a href="#什么是正则？" class="headerlink" title="什么是正则？"></a>什么是正则？</h4><p> 正则就是一个规则，用来处理 <code>字符串</code>的规则</p><blockquote><p>1、正则匹配<br>编写一个规则，验证某个字符串是否符合这个规则，正则匹配使用的是 test 方法</p><p>2、正则捕获<br>编写一个规则，在一个字符串中把符合规则的内容都获取到，正则捕获使用的方法：正则的exec方法、字符串中的split、replace、match等方法都支持正则；</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> reg = <span class="regexp">/^$/</span>; <span class="comment">// =&gt; 两个斜杠中间包含一些内容就是正则，两个斜杠之间包含的全部内容都是元字符</span></span><br></pre></td></tr></table></figure><h3 id="正则的元字符和修饰符"><a href="#正则的元字符和修饰符" class="headerlink" title="正则的元字符和修饰符"></a>正则的元字符和修饰符</h3><blockquote><p>任何一个正则都是由 元字符 和 修饰符 组成的</p></blockquote><p><code>修饰符</code></p><p>g(global); 全局匹配</p><p>i(ignoreCase); 忽略大小写</p><p>m(multiline); 多行匹配</p><p><code>元字符</code></p><p>[量词元字符]</p><p>+：让前面的元字符出现一到多次</p><p>？：出现零到一次</p><p>*：出现零到多次</p><p>{n}：出现n次</p><p>{n, }：出现n到多次</p><p>{n, m}：出现n到m次</p><p>[特殊意义的元字符]</p><p>\：转义字符（把一个普通字符转变为有特殊意义的字符，或者把一个有意义字符转换为普通的字符）</p><p>.：除了\n（换行符）以外的任意字符</p><p>\d：匹配一个0~9之间的数字</p><p>\D：匹配任意一个非0~9之间的数字（大写字母和小写字母的组合正好是反向的）</p><p>\w：匹配一个 <code>0~9或字母或_</code>之间的字符</p><p>\s：匹配一个任意空白字符</p><p>\b：匹配一个边界符</p><p>x|y：匹配x或者y中的一个</p><p>[a-z]：匹配a-z中的任意一个字符</p><p>[^a-z]：和上面相反，匹配任意一个非a-z中的字符</p><p>[xyz]：匹配x或者y或者z中的一个字符</p><p>[^xyz]：匹配除了xyz以外的任意字符</p><p>()：正则的小分组，匹配一个小分组（小分组可以理解为大正则中的一个小正则）</p><p>^：以某一个元字符开始</p><p>$：以某一个元字符结束</p><p>?:：只匹配不捕获</p><p>?=：正向预查</p><p>?!：负向预查</p><p>…</p><p>除了以上特殊元字符和量词元字符，其余的都叫做普通元字符；：代表本身意义的元字符</p><h3 id="元字符详细解读"><a href="#元字符详细解读" class="headerlink" title="元字符详细解读"></a>元字符详细解读</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> reg = <span class="regexp">/\d+/</span>;</span><br><span class="line"><span class="keyword">var</span> str = <span class="string">'每天2018进步2019'</span>;</span><br><span class="line">reg.test(str) =&gt; <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">reg - <span class="regexp">/^\d+/</span>;</span><br><span class="line">reg.test(str) =&gt; <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">reg = <span class="regexp">/^\d+$/</span>; <span class="comment">// =&gt; 只能是某某某的，这里说明只能是1到多个数字</span></span><br><span class="line"></span><br><span class="line">reg.test(<span class="string">'2018'</span>); =&gt; <span class="literal">true</span></span><br><span class="line">reg.test(<span class="string">'你90'</span>); =&gt; <span class="literal">false</span></span><br><span class="line">reg.test(<span class="string">'2'</span>); =&gt; <span class="literal">true</span> ^或者$只是一个修饰或者声明，不会占据字符串的位置</span><br></pre></td></tr></table></figure><p><code>\</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> reg = <span class="regexp">/^2.3$/</span>;</span><br><span class="line">reg.test(<span class="string">'2.3'</span>); =&gt; <span class="literal">true</span></span><br><span class="line">reg.test(<span class="string">'2+3'</span>); =&gt; <span class="literal">true</span> 点自爱正则中的意思：匹配除了\n以外的任意字符，而不是单纯的小数点</span><br><span class="line"></span><br><span class="line">reg = <span class="regexp">/^2\.3$/</span>;</span><br><span class="line">reg.test(<span class="string">'2.3'</span>); =&gt; <span class="literal">true</span></span><br><span class="line">reg.test(<span class="string">'2+3'</span>); =&gt; <span class="literal">false</span> 使用转义字符把点转换为本身小数点的意思</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> reg = <span class="regexp">/^\\d$/</span>;</span><br><span class="line">reg.test(<span class="string">'\\d'</span>); =&gt; <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> reg = <span class="regexp">/^\\\d$/</span>;</span><br><span class="line">reg.test(<span class="string">'//9'</span>); =&gt; <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> reg = <span class="regexp">/^\$/</span>;</span><br><span class="line">reg.test(<span class="string">'\'); =&gt; 报错</span></span><br></pre></td></tr></table></figure><p><code>x|y</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> reg = <span class="regexp">/^0|1$/</span>;</span><br><span class="line">reg.test(<span class="string">'0'</span>); =&gt; <span class="literal">true</span></span><br><span class="line">reg.test(<span class="string">'1'</span>); =&gt; <span class="literal">true</span></span><br><span class="line">reg.test(<span class="string">'01'</span>); =&gt; <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> reg = <span class="regexp">/^18|19$/</span>;</span><br><span class="line">reg.test(<span class="string">'18'</span>); =&gt; <span class="literal">true</span></span><br><span class="line">reg.test(<span class="string">'19'</span>); =&gt; <span class="literal">true</span></span><br><span class="line">reg.test(<span class="string">'189'</span>); =&gt; <span class="literal">true</span></span><br><span class="line">reg.test(<span class="string">'119'</span>); =&gt; <span class="literal">true</span></span><br><span class="line">reg.test(<span class="string">'181'</span>); =&gt; <span class="literal">true</span></span><br><span class="line">reg.test(<span class="string">'819'</span>); =&gt; <span class="literal">true</span></span><br><span class="line">reg.test(<span class="string">'1819'</span>); =&gt; <span class="literal">true</span></span><br><span class="line">reg.test(<span class="string">'81'</span>); =&gt; <span class="literal">false</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 18或者19</span></span><br><span class="line"><span class="comment"> * 以1开头 以9结尾 中间是8或者1</span></span><br><span class="line"><span class="comment"> * 以18开头或者以19结尾即可</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> reg = <span class="regexp">/^(18|19)$/</span>; <span class="comment">// =&gt; 此时只有18或者19符合我们的规则了</span></span><br></pre></td></tr></table></figure><blockquote><p>()：正则中的分组，也可以理解为一个大正则中的一个正则（包起来的部分是一个整体）：在正则中我们可以使用小括号<code>改变一些默认的优先级</code>;<br>小分组还有第二个作用：<code>分组引用</code><br>小分组的第三个作用：<code>分组捕获</code></p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> reg = <span class="regexp">/^[a-z]$/</span>;</span><br><span class="line"><span class="comment">// =&gt; 分组引用：\1 或者 \2 ...出现和第N个分组一模一样的内容</span></span><br><span class="line"><span class="keyword">var</span> reg = <span class="regexp">/^([a-z])([a-z])\2([a-z])$/</span>;</span><br><span class="line">reg.test(<span class="string">'food'</span>); =&gt; <span class="literal">true</span></span><br><span class="line">reg.test(<span class="string">'foad'</span>); =&gt; <span class="literal">false</span></span><br><span class="line">reg.test(<span class="string">'foot'</span>); =&gt; <span class="literal">true</span></span><br><span class="line">reg.test(<span class="string">'book'</span>); =&gt; <span class="literal">true</span></span><br><span class="line">reg.test(<span class="string">'weel'</span>); =&gt; <span class="literal">true</span></span><br></pre></td></tr></table></figure><p><code>[]</code></p><blockquote><p>[xyz][^xyz][a-z][^a-z]<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// =&gt; \w：数字字母下划线中的任意一个字符</span></span><br><span class="line"><span class="keyword">var</span> reg = <span class="regexp">/^[a-zA-Z0-9_]$/</span>; <span class="comment">// =&gt; 等价于 \w</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// =&gt; 中括号中出现的元字符，一般都代表本身的含义</span></span><br><span class="line"><span class="keyword">var</span> reg = <span class="regexp">/^[.?+&amp;]+&amp;/</span>; <span class="comment">// =&gt; 里面的四个元字符都是本身含义，例如：点就是小数点了，不是所谓的任意字符</span></span><br><span class="line">reg.test(<span class="string">'您好'</span>); =&gt; <span class="literal">false</span></span><br><span class="line">reg.test(<span class="string">'...'</span>); =&gt; <span class="literal">true</span></span><br><span class="line">reg.test(<span class="string">'?+'</span>); =&gt; <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> reg = <span class="regexp">/^[a-z]$/</span>;</span><br><span class="line">reg.test(<span class="string">'-'</span>); =&gt; <span class="literal">false</span></span><br><span class="line">reg.test(<span class="string">'a'</span>); =&gt; <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// =&gt; 需求：描述样式类名的规则（数字、字母、下划线、-）,并且不能以-开头</span></span><br><span class="line"><span class="keyword">var</span> reg =  <span class="regexp">/^[\w-]+$/</span>;</span><br><span class="line"><span class="keyword">var</span> reg =  <span class="regexp">/^[0-9a-zA-Z_--]+$/</span>; <span class="comment">// =&gt; 没有处理以-开头的情况</span></span><br><span class="line">reg.test(<span class="string">'-bb'</span>); =&gt; <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> reg = <span class="regexp">/^\w[\w-]*$/</span>;</span><br></pre></td></tr></table></figure></p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// =&gt; 需求：验证18~65之间的年龄</span></span><br><span class="line"><span class="keyword">var</span> reg = <span class="regexp">/^[18-65]$/</span>; <span class="comment">// =&gt; 1或者8~6或者5中的任意一个字符，中括号中出现的18不是数字18，而是1或者8，当前正则是非法的：因为不能设置8~6这种范围</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// =&gt;分三个阶段处理：</span></span><br><span class="line"><span class="comment">// 18 或者19 /(18|19)/</span></span><br><span class="line"><span class="comment">// 20 ~ 59 /([2-5]\d)/</span></span><br><span class="line"><span class="comment">// 60 ~ 65 /(6[0-5])/</span></span><br><span class="line"><span class="keyword">var</span> reg = <span class="regexp">/^(18|19)|([2-5]\d)|(6[0-5])$/</span>;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> reg = <span class="regexp">/^[\]$/; =&gt; 报错</span></span><br></pre></td></tr></table></figure><h3 id="常用的正则表达式编写"><a href="#常用的正则表达式编写" class="headerlink" title="常用的正则表达式编写"></a>常用的正则表达式编写</h3><p><code>验证是否为有效数字</code><br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 可能是正数，可能是负数 12 -12</span></span><br><span class="line"><span class="comment"> * 整数或者小数 0 12 0.2 12.5 -12.3 </span></span><br><span class="line"><span class="comment"> * 只要出现小数点，后面至少要跟以为数字</span></span><br><span class="line"><span class="comment"> * 小数点前面必须有数字</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">var</span> reg = <span class="regexp">/^-?\d+(\.\d+)?$/</span>;</span><br><span class="line"><span class="keyword">var</span> reg = <span class="regexp">/^-?(\d|([1-9]\d+))(\.\d+)?$/</span>;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * -? 负号可有可无</span></span><br><span class="line"><span class="comment"> * (\d|([1-9]\d+))</span></span><br><span class="line"><span class="comment"> * \d 一位数可以是任何值</span></span><br><span class="line"><span class="comment"> * ([1-9]\d+) 多位数不能以零开头</span></span><br><span class="line"><span class="comment"> * (\.\d+)? 小数部分可有可无，有的话点后面必须跟一位数字</span></span><br></pre></td></tr></table></figure></p><p><code>电话号码</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 11位数字</span></span><br><span class="line"><span class="comment"> * 1开头</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">var</span> reg = <span class="regexp">/^1\d&#123;10&#125;$/</span>;</span><br></pre></td></tr></table></figure><p><code>用户名：真实姓名</code><br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="comment">//=&gt; /^[\u4E00-\u9FA5]$/ 中文汉字的正则</span></span><br><span class="line"><span class="keyword">var</span> reg = <span class="regexp">/^[\u4E00-\u9FA5]&#123;2, 5&#125;(·[\u4E00-\u9FA5]&#123;2, 5&#125;)?$/</span>;</span><br></pre></td></tr></table></figure></p><p><code>邮箱</code><br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> reg = <span class="regexp">/^\w+((-\w+)|(\.\w+))*@[A-Za-z0-9]+((\.|-)[A-Za-z0-9]+)*\.[A-Za-z0-9]+$/</span>;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * \w+ =&gt;以数字字母下划线开头</span></span><br><span class="line"><span class="comment"> * @前面可以是 数字、字母、下划线、-、. 这些符号</span></span><br><span class="line"><span class="comment"> * ((-\w+)|(\.\w+))* =&gt; 不能把 - 和 . 连续出现，出现一次后面必须跟数字字母下划线</span></span><br><span class="line"><span class="comment"> * @ 后面的部分支持</span></span><br><span class="line"><span class="comment"> *   企业邮箱</span></span><br><span class="line"><span class="comment"> *   .com.cn 多域名情况</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * [A-Za-z0-9]+ =&gt; @153.com.cn</span></span><br><span class="line"><span class="comment"> * ((\.|-)[A-Za-z0-9]+)*  =&gt; </span></span><br><span class="line"><span class="comment"> * \.[A-Za-z0-9]+  =&gt; </span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"></span><br><span class="line">@<span class="number">163.</span>com.cn</span><br><span class="line">@test-test-test-test.com.cn</span><br></pre></td></tr></table></figure></p><p><code>身份证号码</code><br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 18位</span></span><br><span class="line"><span class="comment"> * 前17位必须是数字</span></span><br><span class="line"><span class="comment"> * 最后一位可以是数字或者X(X代表数字10)</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 362202199308018888</span></span><br><span class="line"><span class="comment"> * 前六位：省市县 362202</span></span><br><span class="line"><span class="comment"> * 接下来八位 出生年+月+日</span></span><br><span class="line"><span class="comment"> * 倒数第二位数字 奇数代表男 偶数代表女</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"><span class="keyword">var</span> reg = <span class="regexp">/^(\d&#123;6&#125;)(\d&#123;4&#125;)(\d&#123;2&#125;)(\d&#123;2&#125;)\d&#123;2&#125;(\d)(\d|X)$/</span>;</span><br><span class="line"><span class="comment">// =&gt; 这样写不仅可以匹配，而且以后再捕获的时候，不仅可以把大正则匹配的结果捕获到，里面每一个小分组（小正则）匹配的结果也可以单独的捕获到"分组捕获"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// =&gt; 年 1950~2017</span></span><br><span class="line"><span class="comment">// =&gt; 第一段 1950~1999</span></span><br><span class="line"><span class="comment">// =&gt; 第二段 2000~2017</span></span><br><span class="line"><span class="comment">// =&gt; 00~09</span></span><br><span class="line"><span class="comment">// =&gt; 10~17</span></span><br><span class="line"><span class="comment">// =&gt; /^((19[5-9]\d)|(20((0\d)|(1[0-7]))))$/</span></span><br></pre></td></tr></table></figure></p><h3 id="正则捕获"><a href="#正则捕获" class="headerlink" title="正则捕获"></a>正则捕获</h3><blockquote><p>把当前字符串中符合正则的字符捕获到<br>RegExp.prototype: <code>exec</code>实现正则捕获的方法</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">''</span>;</span><br><span class="line"><span class="keyword">var</span> reg = <span class="regexp">/\d+/</span>;</span><br><span class="line"></span><br><span class="line">reg.exec(str);</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 当正则捕获的时候：</span></span><br><span class="line"><span class="comment"> * 1、先去验证当前字符串和正则是否匹配，如果不匹配返回的结果是null（没有捕获到任何的内容）</span></span><br><span class="line"><span class="comment"> * 2、如果匹配，从字符串最左边开始，向右查找到匹配的内容，并且把匹配的内容返回</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * exec捕获到结果的格式：</span></span><br><span class="line"><span class="comment"> * -&gt; 获取的结果是一个数组</span></span><br><span class="line"><span class="comment"> * -&gt; 数组中得第一项是当前本次大正则在字符串中匹配到的结果</span></span><br><span class="line"><span class="comment"> * -&gt; index: 记录了当前本次捕获到结果的起始索引</span></span><br><span class="line"><span class="comment"> * -&gt; input: 当前正则操作的原始字符串</span></span><br><span class="line"><span class="comment"> * -&gt; 如果当前正则中有分组，获得的数组中，从第二项开始都是每个小分组，本次匹配到的结果（通过exec可以把分组中的内容捕获到）</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 执行一次exec只能把符合正则规则条件中的一个内容捕获到，如果还有其他符合规则的，需要再次执行exec才有可能捕获到</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> **、</span></span><br></pre></td></tr></table></figure><p><code>正则捕获存在懒惰行</code></p><blockquote><p>执行一次exec捕获到第一个符合规则的内容，第二次执行exec，捕获到的依然是第一个匹配的内容，后面匹配的内容不管执行多少次exec都无法捕获到</p><p>解决正则捕获的懒惰性；<br>在正则的末尾加修饰符g（全局匹配）</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//=&gt; 正则为什么会存在懒惰性？</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 正则本身有一个属性：lastIndex(下一次正则在字符串中匹配查找的开始索引)</span></span><br><span class="line"><span class="comment"> * 默认值：0，从字符串第一个字符开始查找匹配的内容</span></span><br><span class="line"><span class="comment"> * 默认不管指定多少遍exec方法，正则的lastIndex值都不会变（也就是第二次以后查找的时候还是从第一个字符找，所以找到的结果永远都是第一个匹配的内容）</span></span><br><span class="line"><span class="comment"> * 而且当我们手动把lastIndex 进行修改的时候，不会起到任何的作用</span></span><br><span class="line"><span class="comment"> * */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//=&gt; 为什么加了g就解决了懒惰性？</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 加了修饰符g,每一次exec结束后，浏览器默认会把lastIndex值进行修改，下一次从上一次结束的位置开始查找，所以可以得到后面匹配的内容了</span></span><br><span class="line"><span class="comment"> **/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> reg = <span class="regexp">/\d+/</span>;</span><br><span class="line"><span class="keyword">var</span> str = <span class="string">'一路2018扬帆起航2019'</span>;</span><br><span class="line"><span class="built_in">console</span>.log(reg.lastIndex); <span class="comment">// =&gt; 0</span></span><br><span class="line"><span class="built_in">console</span>.log(reg.exec(str)[<span class="number">0</span>]); <span class="comment">// =&gt; '2018'</span></span><br></pre></td></tr></table></figure><blockquote><p>exec有自己的局限性：执行一次exec只能捕获到一个和正则匹配的结果（即使加了修饰符g）,如果需要都捕获到，我们需要执行N次exec方法才可以</p><p>下面封装的myExecAll方法，目的是执行一次这个方法，可以把当前正则匹配到的全部内容都捕获到</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">RegExp</span>.prototype.myExecAll = <span class="function"><span class="keyword">function</span> <span class="title">myExecAll</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">//=&gt; this:当前需要处理的正则</span></span><br><span class="line">    <span class="comment">//=&gt; str:当前需要处理的字符串</span></span><br><span class="line">    <span class="keyword">var</span> str = <span class="built_in">arguments</span>[<span class="number">0</span>] || <span class="string">''</span>,</span><br><span class="line">        result = [];</span><br><span class="line"></span><br><span class="line">    <span class="comment">//=&gt; 首先判断this是否加了全局修饰符g,如果没有加，为了防止下面执行出现死循环，我们只让其执行一次exec即可，把执行一次的结果直接的返回</span></span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">this</span>.global) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.exec(str);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> ary = <span class="keyword">this</span>.exec(str);</span><br><span class="line">    <span class="keyword">while</span>(ary) &#123; <span class="comment">/* ary !== null; 还可以捕获到内容，我们继续下一次捕获*/</span></span><br><span class="line">        result.push(ary[<span class="number">0</span>]); <span class="comment">//=&gt; 把当前本次捕获到的结果存放在result数组中</span></span><br><span class="line">        ary = <span class="keyword">this</span>.exec(str); <span class="comment">//=&gt; 继续执行下一次的捕获</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> reg = <span class="regexp">/\d+/g</span>; <span class="comment">//不要忘记加g</span></span><br><span class="line">reg.myExecAll(<span class="string">'学习2018正则2019'</span>);</span><br></pre></td></tr></table></figure><h3 id="使用字符串方法match实现捕获"><a href="#使用字符串方法match实现捕获" class="headerlink" title="使用字符串方法match实现捕获"></a>使用字符串方法match实现捕获</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> reg = <span class="regexp">/\d+/g</span>;</span><br><span class="line"><span class="keyword">var</span> str = <span class="string">'学习2018正则2019'</span>;</span><br><span class="line">str.match(reg);</span><br></pre></td></tr></table></figure><blockquote><p>使用字符串的match捕获：<br>1、如果正则加了修饰符g,执行一次match会把所有正则匹配的内容捕获到；<br>2、如果没有加修饰符g,执行一次match只能把第一个匹配的结果捕获到；</p><p>局限性：<br>在加了修饰符g的情况下，执行match方法只能把大正则匹配的内容捕获到，对于小分组捕获的内容方法给其自动忽略了</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">'my name is &#123;0&#125;, i am &#123;1&#125; years old~, 2018'</span>;</span><br><span class="line"><span class="comment">//=&gt; 需求：把&#123;n&#125;整体捕获到，而且还要把括号中的数字也获取到</span></span><br><span class="line"><span class="keyword">var</span> reg = <span class="regexp">/\&#123;(\d+)\&#125;/g</span>;</span><br><span class="line"></span><br><span class="line">str.match(reg); <span class="comment">//=&gt; ["&#123;0&#125;", "&#123;1&#125;"]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//=&gt; 想要获取小分组中的内容，我们只能使用exec处理了</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params">reg, str</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> ary = reg.ecec(str),</span><br><span class="line">    result = [];</span><br><span class="line">    <span class="keyword">while</span>(ary) &#123;</span><br><span class="line">        result.push(ary);</span><br><span class="line">        ary = reg.ecec(str);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="14、使用test也可以实现正则的捕获"><a href="#14、使用test也可以实现正则的捕获" class="headerlink" title="14、使用test也可以实现正则的捕获"></a>14、使用test也可以实现正则的捕获</h3><blockquote><p>不管是正则的匹配还是正则的捕获，在处理时候的原理是没区别的：<code>从字符串的第一个字符向后查找，找到符合正则规则的字符，如果可以找到，说明正则和字符串匹配（test检测返回true、exec捕获返回捕获的内容），如果找到末尾都没有匹配的，说明正则和字符串不匹配（test检测返回false、exec捕获返回null）</code></p><p>如果正则设置了修饰符g,不管使用test还是exec中的任何方法，都会修改lastIndex值（下一次查找是基于上一次匹配结果的末尾开始查找的）</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> reg = <span class="regexp">/\&#123;(\d+)\&#125;/g</span>;</span><br><span class="line"><span class="keyword">var</span> str = <span class="string">'my name is &#123;0&#125;~~'</span>;</span><br><span class="line"><span class="keyword">if</span> (reg.test(str)) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(reg.lastIndex); <span class="comment">//=&gt;14</span></span><br><span class="line">    <span class="comment">//=&gt; 如果当前字符串和正则是匹配的，我们进行捕获</span></span><br><span class="line">    <span class="built_in">console</span>.log(reg.exec(str)); <span class="comment">//=&gt; null</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>使用test不仅可以找到匹配的内容，也能像exec一样，把找到的内容获取到<br>test返回结果是true/false,所以靠返回结果肯定不行</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> reg = <span class="regexp">/\&#123;(\d+)\&#125;/g</span>;</span><br><span class="line"><span class="keyword">var</span> str = <span class="string">'my name is &#123;0&#125;~~'</span>;</span><br><span class="line"><span class="keyword">var</span> flag = reg.test(str); <span class="comment">//=&gt; true</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">RegExp</span>.$<span class="number">1</span>); <span class="comment">//=&gt; 获取到当前本次匹配内容中第一个小分组捕获的内容</span></span><br><span class="line"></span><br><span class="line">reg.test(str); <span class="comment">//=&gt; true</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">RegExp</span>.$<span class="number">1</span>); <span class="comment">// =&gt; 1 TEST可以实现捕获，但是每一次只能获取到当前本次匹配结果中，第N个分组捕获的内容 $1第一个分组 $2第二个分组</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> result = [],</span><br><span class="line">ary = reg.exec(str);</span><br><span class="line"><span class="keyword">while</span>(ary) &#123;</span><br><span class="line">    result.push(ary[<span class="number">1</span>]);</span><br><span class="line">    ary = reg.exec(str);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(result);<span class="comment">//=&gt; ["0", "1"]</span></span><br></pre></td></tr></table></figure><h3 id="15、所有支持正则的方法都可以实现正则的捕获（一般都是字符串方法），"><a href="#15、所有支持正则的方法都可以实现正则的捕获（一般都是字符串方法），" class="headerlink" title="15、所有支持正则的方法都可以实现正则的捕获（一般都是字符串方法），"></a>15、所有支持正则的方法都可以实现正则的捕获（一般都是字符串方法），</h3><blockquote><p>字符串中常用的支持正则的方法：<br>match<br>split<br>replace<br>…</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">'?name=123&amp;age=8&amp;lx=test'</span>;</span><br><span class="line">str.split(<span class="regexp">/&amp;|=/</span>); <span class="comment">//=&gt; ["name", "123", "age", "8", "lx", "test"]</span></span><br><span class="line"></span><br><span class="line">str.split(<span class="regexp">/(&amp;|=)/</span>)); <span class="comment">//=&gt; ["name", "=", "123", "&amp;", "age", "=", "8", "&amp;", "lx", "=", "test"]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//=&gt; 在使用split进行字符串拆分的时候，如果正则中包含小分组，会把小分组中的内容都捕获到，放在最后的数组中</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//=&gt;本案例中的小括号仅仅是为了实现改变      级 问题，但是不想把分组中的内容捕获到 =&gt; "只想匹配不想捕获" 我们可以使用(?:)</span></span><br><span class="line"></span><br><span class="line">str.split(<span class="regexp">/(?:&amp;|=)/</span>); <span class="comment">// =&gt; ["name", "123", "age", "8", "lx", "test"]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//=&gt;只匹配不捕获：</span></span><br><span class="line"><span class="comment">//在当前一个分组中加了 ?: ，在正则检测匹配的时候，小分组可以起到自己应有的作用（例如：改变优先级...）,但是在捕获的时候，遇到了带?:的小分组，浏览器不会把当前这个分组中匹配的内容，单独去捕获了</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> reg = <span class="regexp">/^(\d&#123;6&#125;)(\d&#123;4&#125;)(\d&#123;2&#125;)(\d&#123;2&#125;)(?:\d&#123;2&#125;)(\d)(?:\d|X)$/</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> reg = <span class="regexp">/^-?(?:\d|(?:[1-9]\d+))(?:\.\d+)?$/</span>; <span class="comment">//=&gt;计算式第几个分组的时候，我们从左向右找（ 即可；</span></span><br></pre></td></tr></table></figure><p><strong><code>replace</code></strong></p><blockquote><p>replace:字符串中原有字符的替换<br>str.replace(old, new)</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">'test123you123'</span></span><br><span class="line">str.replace(<span class="string">'test'</span>, <span class="string">'example'</span>);</span><br></pre></td></tr></table></figure><blockquote><p>replace原理：<br>1、当replace方法执行，第一项传递一个正则<br>正则不加g: 把当前字符串中第一个和正则匹配的结果捕获到，替换成新的字符<br>正则加g: 把当前字符串中所有和正则匹配的内容都分别的捕获到,而且每一次捕获，都会把当前捕获的内容替换为新字符</p></blockquote><h2 id="Words-in-the-end"><a href="#Words-in-the-end" class="headerlink" title="Words in the end"></a>Words in the end</h2><p>Here recommands a very good article to make you better understand regular:</p><p> <a href="https://juejin.im/post/5965943ff265da6c30653879" target="_blank" rel="noopener">Click me</a></p><p> <a href="https://github.com/qdlaoyao/js-regex-mini-book" target="_blank" rel="noopener">Download link</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Introduction&quot;&gt;&lt;a href=&quot;#Introduction&quot; class=&quot;headerlink&quot; title=&quot;Introduction&quot;&gt;&lt;/a&gt;Introduction&lt;/h2&gt;&lt;p&gt;This is an article about regul
      
    
    </summary>
    
    
      <category term="regular" scheme="https://summerangel.github.io/tags/regular/"/>
    
  </entry>
  
  <entry>
    <title>Exploring Webpack4 and Babel7 In React16</title>
    <link href="https://summerangel.github.io/2018/09/17/react-webpack-babel/"/>
    <id>https://summerangel.github.io/2018/09/17/react-webpack-babel/</id>
    <published>2018-09-17T13:32:33.000Z</published>
    <updated>2018-09-17T16:36:47.819Z</updated>
    
    <content type="html"><![CDATA[<h3 id="One、Create-Project"><a href="#One、Create-Project" class="headerlink" title="One、Create Project"></a>One、Create Project</h3><p>  1、 Create project in your computer, name the project whatever you want:<br>  <code>mkdir react-webpack-kit &amp;&amp; cd react-webpack-kit</code>;</p><p>  2、Init a package.json file: <code>npm init -y</code>;</p><h3 id="Two、Dependencies-that-webpack-need"><a href="#Two、Dependencies-that-webpack-need" class="headerlink" title="Two、Dependencies that webpack need"></a>Two、Dependencies that webpack need</h3><p>   1、Since you are in the directory you just created, you can exectute the command directly:<br>    <code>yarn add -E -D webpack webpack-cli webpack-merge webpack-dev-server autoprefixer css-loader style-loader postcss-loader mini-css-extract-plugin optimize-css-assets-webpack-plugin uglifyjs-webpack-plugin html-webpack-plugin  clean-webpack-plugin file-loader url-loader</code></p><p>   2、In <code>webpack4</code>, <code>webpack-cli</code> is required; <code>webpack-merge</code> is for different webpack config file merge, for there are two different or may be more environments, we can write different config files to adapt different environments; <code>webpack-dev-server</code> is a server set up by webpack, usually we use it in the development environment.</p><p>   3、<code>css-loader style-loader</code>：is for css file compile, if you use sass, you need to install <code>node-sass</code> and <code>sass-loader</code> to compile, similarly if you use less, you need <code>less-loader</code>; <code>autoprefixer postcss-loader</code> is for different browsers compatibility, and also we need to create a postcss config file, you can doing: <code>touch postcss.config.js</code>, and add the config in it，likes following:</p><pre><code><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line">    plugins: [</span><br><span class="line">        require(&apos;autoprefixer&apos;)</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></code></pre><p>   4、<code>mini-css-extract-plugin optimize-css-assets-webpack-plugin uglifyjs-webpack-plugin</code>: although webpack will uglify the code in production environment,it doesn’t uglify the css files, we need other plugin to do this.</p><p>   5、<code>html-webpack-plugin</code>: this plugin help us to copy the html file from our work directory to dist directory after packing, so we don’t need to copy it manually; <code>clean-webpack-plugin</code> is a plugin that clean the dist directory before webpack begin to pack;</p><p>   6、<code>-E -D</code>: means install the plugin with fixed version and only install in devDependencies.</p><h3 id="Three、dependencies-that-babel-need"><a href="#Three、dependencies-that-babel-need" class="headerlink" title="Three、dependencies that babel need"></a>Three、dependencies that babel need</h3><p>   1、After installing the plugins that webpack need, now we begin to install the plugins babel needs:</p><pre><code>`yarn add -E -D babel-loader @babel/core @babel/plugin-transform-runtime @babel/plugin-proposal-decorators @babel/plugin-proposal-class-properties @babel/preset-env @babel/preset-react`</code></pre><p>   2、<code>babel-loader @babel/core</code>：no need to explain;</p><p>   3、<code>@babel/plugin-transform-runtime</code>：is for development environment, and also we should install runtime in production: <code>yarn add -E @babel/runtime</code>;</p><p>   4、<code>@babel/plugin-proposal-decorators @babel/plugin-proposal-class-properties</code>：if we use es6+, then we need these.</p><p>   5、<code>@babel/preset-env @babel/preset-react</code>：mostly for react environment compile.</p><p>   6、Create babel config file: <code>touch babel.config.js</code>(here we should create this file instead of <code>.babelrc</code> file, for there will be a problem which troubled me a lot), the problem looks like:</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Support for the experimental syntax &apos;classProperties&apos; isn&apos;t currently enabled (57:10)</span><br><span class="line">    ......</span><br><span class="line">Add @babel/plugin-proposal-class-properties (https://git.io/vb4Ss) to the &apos;plugins&apos; section of your Babel config to enable transformation.</span><br></pre></td></tr></table></figure><h3 id="Four、Mock-back-end-data"><a href="#Four、Mock-back-end-data" class="headerlink" title="Four、Mock back-end data"></a>Four、Mock back-end data</h3><p>   1、Here I use the packages <code>mockjs</code> and <code>json-server</code>, it’s really awesome:<br>      <code>yarn add -E -D mockjs json-server</code></p><h3 id="Five、Simple-frame-is-ready"><a href="#Five、Simple-frame-is-ready" class="headerlink" title="Five、Simple frame is ready"></a>Five、Simple frame is ready</h3><p>   Now the project dependencies is amost done, you would see the source code by clicking <a href="https://github.com/summerangel/react-webpack-kit" target="_blank" rel="noopener">this</a>;</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;One、Create-Project&quot;&gt;&lt;a href=&quot;#One、Create-Project&quot; class=&quot;headerlink&quot; title=&quot;One、Create Project&quot;&gt;&lt;/a&gt;One、Create Project&lt;/h3&gt;&lt;p&gt;  1、 C
      
    
    </summary>
    
    
      <category term="react、webpack、babel" scheme="https://summerangel.github.io/tags/react%E3%80%81webpack%E3%80%81babel/"/>
    
  </entry>
  
  <entry>
    <title>issue-record</title>
    <link href="https://summerangel.github.io/2018/08/10/issue-record/"/>
    <id>https://summerangel.github.io/2018/08/10/issue-record/</id>
    <published>2018-08-09T16:57:45.000Z</published>
    <updated>2018-08-09T17:29:21.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="No-complex-redux-to-realise-logout-when-token-is-expired"><a href="#No-complex-redux-to-realise-logout-when-token-is-expired" class="headerlink" title="No complex redux to realise logout when token is expired"></a>No complex redux to realise logout when token is expired</h4><p>I was using a way found in github which not took effect at the end,I don’t know why.but the way found is a good way to some extends.<br><a href="https://github.com/mrarronz/react-native-blog-examples/blob/master/Chapter5-Navigation/ReactNavigationExample/src/screen/LoginScreen.js" target="_blank" rel="noopener">here is the github address</a>,may help someone.</p><p>tonight I found a really simply and good way to complete the function,which use the method of event,we listen the callback result of the interface,when gave us the code of token expired, then emit the event,and we add an listener in our my page(which usually the place of the logout button),this is the point,when the my page found the event, we call the logout function which we usually put it in the logout button,over, tested,it works.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;No-complex-redux-to-realise-logout-when-token-is-expired&quot;&gt;&lt;a href=&quot;#No-complex-redux-to-realise-logout-when-token-is-expired&quot; class=
      
    
    </summary>
    
    
      <category term="react-native" scheme="https://summerangel.github.io/tags/react-native/"/>
    
  </entry>
  
  <entry>
    <title>Wechat share config</title>
    <link href="https://summerangel.github.io/2018/07/18/wechat-share/"/>
    <id>https://summerangel.github.io/2018/07/18/wechat-share/</id>
    <published>2018-07-18T14:25:17.000Z</published>
    <updated>2018-07-18T14:53:46.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="One-Add-domain"><a href="#One-Add-domain" class="headerlink" title="One: Add domain"></a>One: Add domain</h1><p><a href="https://mp.weixin.qq.com/" target="_blank" rel="noopener">Login in the Wechat Official Accounts</a>,find the Setting –&gt; Official Accounts Setting in the left down slide bar,and you will see Official Accounts Setting in the right main area,then switch to the tab Function Setting,and find the JS interface safety domain in this tab,and the click the Setting button after it,you will see a txt file in the popup dialog,download it and put it in the server besides in your online website root,make sure it can be previewed after putting it in,the you add the project’s domain in this page you are editting,then save it.<br><a href="https://jingyan.baidu.com/article/fa4125acfd4cdc28ac7092f4.html" target="_blank" rel="noopener">Click here to see steps with picture</a></p><h1 id="Two-Add-IP-white-list"><a href="#Two-Add-IP-white-list" class="headerlink" title="Two: Add IP white list"></a>Two: Add IP white list</h1><p><a href="https://mp.weixin.qq.com/" target="_blank" rel="noopener">Login in the Wechat Official Accounts</a>,find the Development –&gt; Basic Config in the left down slide bar,and you will see the Official Accounts Develop Info in the right main area,there exists a title show IP white list: click View button,and click Modify button,add the related IP.<br><a href="https://jingyan.baidu.com/article/4e5b3e1904fccc91901e241c.html" target="_blank" rel="noopener">Click here to see steps with picture</a></p><h1 id="Three-About-update"><a href="#Three-About-update" class="headerlink" title="Three: About update"></a>Three: About update</h1><p>After changing a new Official Accounts,don’t forget to update the appId and appSecret in your code.</p><h1 id="Last-Whatever"><a href="#Last-Whatever" class="headerlink" title="Last: Whatever"></a>Last: Whatever</h1><p>When you need to share with pretty title and image,above config in Wechat Official Accounts is necessary.This article is written in vscode, the new editor vscode is really awesome.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;One-Add-domain&quot;&gt;&lt;a href=&quot;#One-Add-domain&quot; class=&quot;headerlink&quot; title=&quot;One: Add domain&quot;&gt;&lt;/a&gt;One: Add domain&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://mp.
      
    
    </summary>
    
    
      <category term="wechat" scheme="https://summerangel.github.io/tags/wechat/"/>
    
  </entry>
  
  <entry>
    <title>The project of react-native come to an end</title>
    <link href="https://summerangel.github.io/2018/07/11/react-native-conclusion/"/>
    <id>https://summerangel.github.io/2018/07/11/react-native-conclusion/</id>
    <published>2018-07-11T13:09:11.000Z</published>
    <updated>2018-07-11T14:55:54.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Say-goodbye-to-react-native-project-temporarily"><a href="#Say-goodbye-to-react-native-project-temporarily" class="headerlink" title="Say goodbye to react-native project temporarily"></a>Say goodbye to react-native project temporarily</h4><p>  So busy these days that I don’t have time to update my blog and learning,sad.<br>  After struggling in the react-native for several months, solved the environment for developing and have an knowledge of the grammar of react-native,feel so released, and not that afraid of react-native.</p><h4 id="Some-issue-met-record"><a href="#Some-issue-met-record" class="headerlink" title="Some issue met record"></a>Some issue met record</h4><p>   1、Using picture as background image to implement the shadow in order to cross platform which takes effect in both ios and android.</p><p>   The shadow realised by css in react-native is not like the way in web css.<br>   In normal web css you can realise it by the attribute like the writing of: box-shadow: 10px 10px 5px #000;(just an example);<br>   But in react-native,you should write it like this:</p><p>   1) shadowColor color string (shadow color)<br>   2) shadowOffset {width: number,height: number} (shadow offset)<br>   3) shadowOpacity number (shadow opacity)<br>   4) shadowRadius number (shadow radius)</p>   <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;View style=&#123;&#123;</span><br><span class="line">   width: 100,</span><br><span class="line">   height: 100,</span><br><span class="line">   backgroundColor: &apos;red&apos;,</span><br><span class="line">   shadowColor: &apos;green&apos;,</span><br><span class="line">   shadowRadius: 10,</span><br><span class="line">   shadowOpacity: 0.5,</span><br><span class="line">   shadowOffset: &#123;width: 20,height: 20&#125;</span><br><span class="line">&#125;&#125;&gt;</span><br><span class="line">&lt;/View&gt;</span><br></pre></td></tr></table></figure><p>   Due to this is only taking effect in ios,so here I use the shadow picture as the background Image to implement the effect.</p><p>   2、Date format can not be transferred as expected</p><p>   Actually I met this issue years ago,which only the format of 2018/7/11 can be correctly transferred in ios,we should use slash to split the number.<br>   If not slash, use comma or dot or transverse line will get null.</p><p>   3、Error watching file for changes: EMFILE</p><p>   Fix: just install watchman: brew install watchman</p><p>   4、npm ERR! Failed at the <a href="mailto:uglifyjs-webpack-plugin@0.4.6" target="_blank" rel="noopener">uglifyjs-webpack-plugin@0.4.6</a> postinstall script.</p><p>   Met this when deploy the project into the server, execute the command: npm install<br>   Fix: you can use yarn or update the npm.(Experience said: when met some unexplainable issue excuting npm install, you can upgrade or down version of npm.</p><p>   5、iOS: UI will be blocked when show Alert while closing Modal</p><p>   Fix: <a href="https://github.com/facebook/react-native/issues/10471" target="_blank" rel="noopener">Reffer to this link</a></p><h4 id="Bundle-ios"><a href="#Bundle-ios" class="headerlink" title="Bundle ios"></a>Bundle ios</h4><p>  1、Run ios: react-native run-ios;<br>  2、Bundle ios: react-native bundle –entry-file index.js –platform ios –dev true –bundle-out ./ios/bundle/index.jsbundle –assets-dest ./ios/bundle</p><h4 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h4><p>  The project is just finished like this, feel a little lost, thought the process to learn react-native is hard but still happy and satisfied.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;Say-goodbye-to-react-native-project-temporarily&quot;&gt;&lt;a href=&quot;#Say-goodbye-to-react-native-project-temporarily&quot; class=&quot;headerlink&quot; title
      
    
    </summary>
    
    
      <category term="react-native" scheme="https://summerangel.github.io/tags/react-native/"/>
    
  </entry>
  
  <entry>
    <title>React Native TextInput cannot transfer to chinese bug</title>
    <link href="https://summerangel.github.io/2018/06/27/react-native-bug/"/>
    <id>https://summerangel.github.io/2018/06/27/react-native-bug/</id>
    <published>2018-06-27T13:25:19.000Z</published>
    <updated>2018-07-11T14:57:08.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="一、A-big-bug-of-React-Native"><a href="#一、A-big-bug-of-React-Native" class="headerlink" title="一、A big bug of React Native"></a>一、A big bug of React Native</h4><p>  I was use the rn library version 0.55.4,It has the same problem from version 0.55.0 to 0.55.5,after googling for this issue for almost one day,<br>  <a href="https://github.com/facebook/react-native/issues/18403" target="_blank" rel="noopener">Here are the mainly Gain</a> where the same problem other developer met, and after thinking<br>  for all condition,I took the hack method to solve this problem, neither downversion nor upversion of rn.<br>  Reffer to <a href="https://github.com/facebook/react-native/pull/18456" target="_blank" rel="noopener">this issue</a>,and above this smart guy’s <a href="https://snack.expo.io/Hkp55vn6G" target="_blank" rel="noopener">demo</a>,<br>  according to following’s guy, wrapper it to a component.</p><img src="/2018/06/27/react-native-bug/smart_guy.jpg" title="method"><h4 id="二、Fix-method-in-my-project"><a href="#二、Fix-method-in-my-project" class="headerlink" title="二、Fix method in my project"></a>二、Fix method in my project</h4><p>1、Create a new file to wrapper the hack text input to a component，first you should import some necessary libraries,like: react-native/react;</p><img src="/2018/06/27/react-native-bug/fix_method.jpg" title="fix_method"><p>2、In your TextInput component, import the Platform plugin,and add the following things:</p><img src="/2018/06/27/react-native-bug/fix_method_parent.jpg" title="fix_method_parent"><p>3、In your html,according to the _checkIsNeedHack,display related input,normal one or hack one.</p><img src="/2018/06/27/react-native-bug/html_like.jpg" title="html_like"><h4 id="三、The-trick"><a href="#三、The-trick" class="headerlink" title="三、The trick"></a>三、The trick</h4><p>Here use setTimeout to delay for the display of the props data from parent component.If not, the data from up component will not show in the text input value.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;一、A-big-bug-of-React-Native&quot;&gt;&lt;a href=&quot;#一、A-big-bug-of-React-Native&quot; class=&quot;headerlink&quot; title=&quot;一、A big bug of React Native&quot;&gt;&lt;/a&gt;一、A b
      
    
    </summary>
    
    
      <category term="react-native" scheme="https://summerangel.github.io/tags/react-native/"/>
    
  </entry>
  
  <entry>
    <title>Awesome Charles</title>
    <link href="https://summerangel.github.io/2018/06/14/charles-thing/"/>
    <id>https://summerangel.github.io/2018/06/14/charles-thing/</id>
    <published>2018-06-14T14:33:37.000Z</published>
    <updated>2018-07-11T15:00:34.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Modify-request"><a href="#Modify-request" class="headerlink" title="Modify request"></a>Modify request</h4><p>Today I get another function about Charles,which heard of my colleague.Actually I installed Charles before,but I only used it to fetch request from app,for it can’t be opened in browser,we can modify the request params and also the response,steps are:</p><p>  1、Find the url you want to modify;<br>  2、Then right click it, select the option Breakpoint;<br>  3、Then repeat the url(you can use quick key to execute this: shift + command + R);<br>  4、Then the process will open another window to the breakpoint you set;<br>  5、At this time, you can click the tab Edit request or Edit the response option;<br>  6、After modified, click the button execute to continue;<br>  7、Finally the modified url completed, the process is done.</p><p>  Following give some screenshots to express this:<br>  <img src="/2018/06/14/charles-thing/screen_one.jpg" title="step one"><br>  <img src="/2018/06/14/charles-thing/screen_two.jpg" title="step two"><br>  <img src="/2018/06/14/charles-thing/screen_three.jpg" title="step three"></p><h4 id="Map-Local-get-mock-data-from-local-file"><a href="#Map-Local-get-mock-data-from-local-file" class="headerlink" title="Map Local(get mock data from local file)"></a>Map Local(get mock data from local file)</h4><p>Select Tool –&gt; Map local: this allow you to get mock data from your own computer which you discussed with back-end developer when the back-end developer isn’t ready to provide the real data.</p><h4 id="Change-the-speed-of-network"><a href="#Change-the-speed-of-network" class="headerlink" title="Change the speed of network"></a>Change the speed of network</h4><p>You can lower the speed of network for some extreme condition.</p><h4 id="Over"><a href="#Over" class="headerlink" title="Over"></a>Over</h4><p>The three of above is constantly be used by our front-end developer,and is extremely useful,saving a lot of time to communicate with back-end developer.</p><h4 id="Plus"><a href="#Plus" class="headerlink" title="Plus"></a>Plus</h4><p>If we want to modify some request in one page,we should keep in mind that whether the request is called in that page,if not, we should better make breakpoint in domain.<br>give a screenshot to express this,refer to <a href="https://cloud.tencent.com/developer/article/1147452" target="_blank" rel="noopener">this article</a>:<br> <img src="/2018/06/14/charles-thing/screenshot_four.png" title="step four"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;Modify-request&quot;&gt;&lt;a href=&quot;#Modify-request&quot; class=&quot;headerlink&quot; title=&quot;Modify request&quot;&gt;&lt;/a&gt;Modify request&lt;/h4&gt;&lt;p&gt;Today I get another fu
      
    
    </summary>
    
    
      <category term="software" scheme="https://summerangel.github.io/tags/software/"/>
    
  </entry>
  
  <entry>
    <title>Awesome CleanMyMac</title>
    <link href="https://summerangel.github.io/2018/06/10/feeling/"/>
    <id>https://summerangel.github.io/2018/06/10/feeling/</id>
    <published>2018-06-10T13:20:10.000Z</published>
    <updated>2018-06-11T15:08:27.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Just-boring-so-write-something"><a href="#Just-boring-so-write-something" class="headerlink" title="Just boring so write something"></a>Just boring so write something</h4><p>  Lately I was troubled by my computer, for its small volume after installed xcode,I almost can’t work,and today I bought CleanMyMac, actually I installed it before,which is the free one and had no effect at all, instead, the bought one is incredibly effective, release my mac almost double usable volume,it’s really awesome,and make it possible to install the software ps.I can learn some ps skill in my leisure time.Learning is great and full of joy.Happy~~</p><p>  I’m always thinking about updating my blog style(the format is so awful),but as always have no time,there is so much things to do,and time is so fast.So much to learn but have no that much of time.Horrible~~</p><h4 id="New-skill-get-get-dimensions-automately-through-ps-and-zeplin"><a href="#New-skill-get-get-dimensions-automately-through-ps-and-zeplin" class="headerlink" title="New skill get(get dimensions automately through ps and zeplin)"></a>New skill get(get dimensions automately through ps and zeplin)</h4><p>  1、Install ps;<br>  2、Install zeplin;<br>  3、Link zeplin with ps;<a href="https://support.zeplin.io/photoshop-integration/installing-photoshop-plugin-on-mac" target="_blank" rel="noopener">here is official tutorial</a><br>  3、Make it work: <a href="https://support.zeplin.io/photoshop-integration/working-with-artboards-in-photoshop" target="_blank" rel="noopener">this one is helpful</a><br>  4、And you can use this way to get dimension to write your website.</p><p>Actually there exists better software than ps to do this,like sketch,but for my computer’s poor memory,I just use ps to do this,thankful zeplin supports it.</p><h4 id="There-are-so-many-awesome-softwares-to-save-our-time"><a href="#There-are-so-many-awesome-softwares-to-save-our-time" class="headerlink" title="There are so many awesome softwares to save our time."></a>There are so many awesome softwares to save our time.</h4><p> Today’s homework is still delay,it’s late in night again, and I am so sleepy that my eye can’t open. Actually every day is sleepy,I need more more more sleep~~~</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;Just-boring-so-write-something&quot;&gt;&lt;a href=&quot;#Just-boring-so-write-something&quot; class=&quot;headerlink&quot; title=&quot;Just boring so write something&quot;&gt;
      
    
    </summary>
    
    
      <category term="feeling" scheme="https://summerangel.github.io/tags/feeling/"/>
    
  </entry>
  
  <entry>
    <title>Holes in exploring react native</title>
    <link href="https://summerangel.github.io/2018/05/28/about-react-native/"/>
    <id>https://summerangel.github.io/2018/05/28/about-react-native/</id>
    <published>2018-05-28T14:58:57.000Z</published>
    <updated>2018-06-21T15:27:47.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="一、Hole-one"><a href="#一、Hole-one" class="headerlink" title="一、Hole one"></a>一、Hole one</h4><p>  When installing the react-native environment, confront the following:</p><p> It took me almost one day to find this problem out,for I was first day to come this group to work on this react-native project,though I found another way to<br> fix this,I was curious to know what mistake cause this. Ok, focus came,it was caused by some missing files, which may be the window’s fault(another colleague passed it to the git repository using window system computer,then the window didn’t treat that file as a file, because it was treated as a reference addresss in ios,according to my ios<br> colleague), red rectangle is the missing file.</p><h4 id="二、Debug-in-Browser-Mac-ios"><a href="#二、Debug-in-Browser-Mac-ios" class="headerlink" title="二、Debug in Browser (Mac ios)"></a>二、Debug in Browser (Mac ios)</h4><p> 1、 Press command + D in simulator, then the debug menu will show;<br> 2、 Menu One: Reload, equal to the quick command: command + R;<br> 3、 Menu Two: Debug JS Remotely, will open it in browser( <a href="http://localhost:8081/debugger-ui" target="_blank" rel="noopener">http://localhost:8081/debugger-ui</a> ) for you,let you debug like web project;</p><p>   Reference to <a href="http://www.hangge.com/blog/cache/detail_1480.html" target="_blank" rel="noopener">this article</a></p><h4 id="三、Day-two"><a href="#三、Day-two" class="headerlink" title="三、Day two"></a>三、Day two</h4><p>  This was a fucking day,all the whole day was fixing the stupid bug caused by others.</p><p>  1、 Bug one: Infinite callback caused by realm when the version above 2.0.6, so to fix this,<br>  you guys need to install the version 2.0.6,may be the author will fix this later.</p><p>   Reference to <a href="https://github.com/realm/realm-js/issues/1538" target="_blank" rel="noopener">this issue</a></p><p>  2、 Bug two: post can not be transferred to the backend,although there exists<br>  <a href="https://github.com/axios/axios/issues/1321" target="_blank" rel="noopener">same issues</a>, we here are caused by<br>  ourselves.</p><p>  3、 Bug three: may be you guys will meet this, fixing: just install the library they<br>  needed.</p> <img src="/2018/05/28/about-react-native/bug_three.jpg" title="problem may be met"><p>  4、 Tools: React Native Debugger, this is a good debugger tool to modify css and debugger js,<br>  I think it’s better than Chrome,of course,if you like it too,please support the<br>  author,give <a href="https://github.com/jhen0409/react-native-debugger" target="_blank" rel="noopener">the repo</a> a star: <a href="https://github.com/jhen0409/react-native-debugger" target="_blank" rel="noopener">https://github.com/jhen0409/react-native-debugger</a></p><h4 id="四、Support-http-in-ios"><a href="#四、Support-http-in-ios" class="headerlink" title="四、Support http in ios"></a>四、Support http in ios</h4><p>   By default iOS isn’t supporting HTTP requests, only HTTPS requests are allowed.Make ios support http please refer to<br>   <a href="http://www.competa.com/blog/react-native-ios-http-network-request-failed/" target="_blank" rel="noopener">this article</a>,following is an example screenshot<br>   to solve this:<br></p><h4 id="五、library-not-found-for-lQBImagePickerController"><a href="#五、library-not-found-for-lQBImagePickerController" class="headerlink" title="五、library not found for -lQBImagePickerController"></a>五、library not found for -lQBImagePickerController</h4><p>  This was caused by opening the wrong file here which should open workspace file, not project file. see <a href="https://github.com/ivpusic/react-native-image-crop-picker/issues/27" target="_blank" rel="noopener">here</a><br>  （Actually this don’t solve my problem, because another problem came out, xcode is so annoying,want to say bad words）</p><h4 id="六、The-holes-met-in-exploring-to-run-project-in-my-real-phone"><a href="#六、The-holes-met-in-exploring-to-run-project-in-my-real-phone" class="headerlink" title="六、The holes met in exploring to run project in my real phone"></a>六、The holes met in exploring to run project in my real phone</h4><p>   1、First give an <a href="https://www.jianshu.com/p/f31116a76ea9" target="_blank" rel="noopener">article</a> about how to config xcode to run in your real phone</p><p>   2、Your development team “xxx” does not support the Push Notifications capability<br>    Solve method:<br>    In your edit software to open xxx.entitlements like, find and delete “<key>aps-environment</key>“, then save this file.<br>  Refer to <a href="https://www.jianshu.com/p/ae0afe79c6bd" target="_blank" rel="noopener">this article</a></p><p>   3、Xcode not supported for iOS 11.4 by Xcode 9.2 needed 9.4，explain this by a screenshot:</p><p>  Find solving method in <a href="https://stackoverflow.com/questions/49720178/xcode-not-supported-for-ios-11-3-by-xcode-9-2-needed-9-3" target="_blank" rel="noopener">this article</a><br>  You can download <a href="http://www.mediafire.com/file/7m25vq8l35eplws/11.4+%2815F79%29.zip" target="_blank" rel="noopener">iOS 11.4 (15F79)</a> and put it in the directory of ‘Xcode.app//Contents/Developer/Platforms/iPhoneOS.platform/DeviceSupport’(you can open this by right click the icon of xcode in application,select the second one Show package Content),<a href="https://www.jianshu.com/p/7f662bfce732" target="_blank" rel="noopener">may be this one give you more detail</a>.<br>  Or update xcode to <a href="https://itunes.apple.com/us/app/xcode/id497799835?ls=1&amp;mt=12" target="_blank" rel="noopener">9.4</a></p><p>   4、The entitlements specified in your application’s Code Signing Entitlements file are invalid, not permitted, or do not match those specified in your provisioning profile. (0xE8008016).</p><p>   Takes hours to fix this, thanks this guy very much,you are hero: <a href="https://stackoverflow.com/questions/40985359/entitlements-dont-match-provisioning-profile-0xe8008016" target="_blank" rel="noopener">finally fixed this annoying issue</a><br>    records here:<br>       1) Select your project in the Project navigator;<br>       2) Select the “General” tab;<br>       3) To the left of the “General” tab, select your target to the left; (this should show a dropdown with a list of targets);<br>       4) Below your current target you should see an item {your project}Tests; select that;<br>       5) Check the signing properties in the general tab and make sure they are valid.</p><p>   5、Finally,the environment to run the project in my real phone is completely finished,I feel so happy though the process to config the xcode as a new fellow is really fucking and freaking out.</p><h4 id="七、Follow-up"><a href="#七、Follow-up" class="headerlink" title="七、Follow-up"></a>七、Follow-up</h4><p>  After configed the xcode to run project in my real phone, it is not the way I expected to, so I back to use the command way to debugger my project, still spent the whole morning to fix it.</p><p>  records: There exists bug in using absolute css attribute in Android.</p><h4 id="八、Bad-thing-for-me"><a href="#八、Bad-thing-for-me" class="headerlink" title="八、Bad thing for me"></a>八、Bad thing for me</h4><p>  May be clean unuseful files for more memory, I have cleaned the screenshots of this article, the update for my website need to be planned.</p><h4 id="九、Exploring-react-native-snap-carousel"><a href="#九、Exploring-react-native-snap-carousel" class="headerlink" title="九、Exploring react-native-snap-carousel"></a>九、Exploring react-native-snap-carousel</h4><p>I want to realise certain css style,but simply look the api in react-native-snap-carousel isn’t met my requirement,so I download the source code to explore it in the examples the author give,but after installed all the dependencies,it just can’t run it,finally find <a href="https://github.com/archriss/react-native-snap-carousel/issues/93" target="_blank" rel="noopener">the way to fix this</a><br>Just use yarn instead of npm fix this, happily exploring.</p><h4 id="十、Another-skill-get"><a href="#十、Another-skill-get" class="headerlink" title="十、Another skill get"></a>十、Another skill get</h4><p> It is necessary to have effective tools to do good work. Every time it’s so exciting to find a better way to optimize existing work environment.Till now, the environment to develop react-native is almost fully done.As everyone knows,react-native doesn’t support the way to see request.Yesterday this was denunciated by back-end colleague,which effects development severely, I was frustrated by what he said, so googled,and finally found a way to fix this.<br> Ok,focus come,(hehe….so many junk words),it is to use Charles to catch the request fetch by pages.<a href="https://www.jianshu.com/p/3bfae9ede35e" target="_blank" rel="noopener">Here is an article teach you how to config it</a><br> I installed and configed Charles before(I used to develop in hybrid),so here I just to install the certificate at Charles(select Help –&gt; SSL Proxy –&gt; Install … in IOS simulator) and then trust it in my IOS simulator(go to Setting –&gt; General –&gt; About –&gt; Certificate Trust Settings, and then trust it)<br> Finally, I can develop with all the configs happily,and It saves a lot of time.The following is now my work space looks like:<br><img src="/2018/05/28/about-react-native/work_environment.jpeg" title="caused by file missing"></p><h4 id="十一、Hole-in-css"><a href="#十一、Hole-in-css" class="headerlink" title="十一、Hole in css"></a>十一、Hole in css</h4><p> It is not like web css to make an image circle just use border-radius the image’s width or height or 50%, you should give the attribute borderRadius half of the width or height of the image;</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;一、Hole-one&quot;&gt;&lt;a href=&quot;#一、Hole-one&quot; class=&quot;headerlink&quot; title=&quot;一、Hole one&quot;&gt;&lt;/a&gt;一、Hole one&lt;/h4&gt;&lt;p&gt;  When installing the react-native env
      
    
    </summary>
    
    
      <category term="react-native" scheme="https://summerangel.github.io/tags/react-native/"/>
    
  </entry>
  
  <entry>
    <title>Simple scroll realized by css</title>
    <link href="https://summerangel.github.io/2018/05/25/simple-scroll-with-css/"/>
    <id>https://summerangel.github.io/2018/05/25/simple-scroll-with-css/</id>
    <published>2018-05-25T14:48:20.000Z</published>
    <updated>2018-05-25T15:11:54.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Before-start-why-this-article-come-out"><a href="#Before-start-why-this-article-come-out" class="headerlink" title="Before start (why this article come out)"></a>Before start (why this article come out)</h4><p> At before time, I was tend to realize it by the library Swiper, which seems<br> too big and bad performance to left-right scroll.Actually we can realize it<br> by pure css in some degree,  I was told by my leader, so later I change it to<br> pure css.</p><h4 id="Your-html"><a href="#Your-html" class="headerlink" title="Your html"></a>Your html</h4><pre><code><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;parent-wrap&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;child-each-wrap&quot;&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/div</span><br></pre></td></tr></table></figure></code></pre><h4 id="Your-css"><a href="#Your-css" class="headerlink" title="Your css"></a>Your css</h4><pre><code><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">.parent-wrap &#123;</span><br><span class="line">    overflow-x: scroll;</span><br><span class="line">    white-space: nowrap;  // here it seems necessary,if not add it, the</span><br><span class="line">    // scroll will take effect in the whole page,not the parent-wrap element</span><br><span class="line">    padding-bottom: 20px; // here it fix the problem the scroll style</span><br><span class="line">    // still show in IOS</span><br><span class="line">&#125;</span><br><span class="line"> .parent-wrap::-webkit-scrollbar &#123;</span><br><span class="line">    display: none // here is to clear the scroll style</span><br><span class="line"> &#125;</span><br><span class="line">.child-each-wrap &#123;</span><br><span class="line">     display: inline-block; // here is make sure the children are in the</span><br><span class="line">     // same line</span><br><span class="line">     margin-right: 40px;</span><br><span class="line">     width: 360px; // here you can custom your own style</span><br><span class="line">     height: 272px; // here you can custom your own style</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></code></pre><h4 id="Over"><a href="#Over" class="headerlink" title="Over"></a>Over</h4><p>   Though it looks simple enough, it took some time to implement it, just to<br> record it for the sake next time to use it.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;Before-start-why-this-article-come-out&quot;&gt;&lt;a href=&quot;#Before-start-why-this-article-come-out&quot; class=&quot;headerlink&quot; title=&quot;Before start (wh
      
    
    </summary>
    
    
      <category term="css" scheme="https://summerangel.github.io/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>An example to custom baidu map&#39;s overlay</title>
    <link href="https://summerangel.github.io/2018/05/22/custom-map-overlay/"/>
    <id>https://summerangel.github.io/2018/05/22/custom-map-overlay/</id>
    <published>2018-05-22T15:25:48.000Z</published>
    <updated>2018-05-25T02:03:23.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="一、Your-html-looks-like"><a href="#一、Your-html-looks-like" class="headerlink" title="一、Your html looks like:"></a>一、Your html looks like:</h4> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;panel&quot;&gt;</span><br><span class="line">   &lt;div id=&quot;map&quot; class=&quot;map&quot;&gt;显示地图&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><h4 id="二、The-core-code-to-realize-custom-style"><a href="#二、The-core-code-to-realize-custom-style" class="headerlink" title="二、The core code to realize custom style:"></a>二、The core code to realize custom style:</h4> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line">const longitude = 121.532419</span><br><span class="line">const latitude = 31.242774</span><br><span class="line">const mp = new BMap.Map(&apos;map&apos;)</span><br><span class="line">const point = new BMap.Point(longitude, latitude)</span><br><span class="line">mp.centerAndZoom(point, 15)</span><br><span class="line">// 红色圆点</span><br><span class="line">function CustomRedCircle(point) &#123;</span><br><span class="line">  this._point = point</span><br><span class="line">&#125;</span><br><span class="line">// 复杂的自定义覆盖物</span><br><span class="line">function ComplexCustomOverlay(point, text) &#123;</span><br><span class="line">  this._point = point;</span><br><span class="line">  this._text = text;</span><br><span class="line">&#125;</span><br><span class="line">CustomRedCircle.prototype = new BMap.Overlay();</span><br><span class="line">ComplexCustomOverlay.prototype = new BMap.Overlay();</span><br><span class="line">ComplexCustomOverlay.prototype.initialize = function(map) &#123;</span><br><span class="line">  this._map = map;</span><br><span class="line">  var div = this._div = document.createElement(&apos;div&apos;);</span><br><span class="line">  div.style.position = &apos;absolute&apos;;</span><br><span class="line">  div.style.zIndex = BMap.Overlay.getZIndex(this._point.lat) + 1;</span><br><span class="line">  div.style.backgroundColor = &apos;#FFFFFF&apos;;</span><br><span class="line">  div.style.color = &apos;#333333&apos;;</span><br><span class="line">  div.style.padding = &apos;10px 7px 10px 10px&apos;;</span><br><span class="line">  div.style.whiteSpace = &apos;nowrap&apos;</span><br><span class="line">  div.style.MozUserSelect = &apos;none&apos;</span><br><span class="line">  div.style.fontSize = &apos;14px&apos;</span><br><span class="line">  var span = this._span = document.createElement(&apos;span&apos;);</span><br><span class="line">  div.appendChild(span);</span><br><span class="line">  span.appendChild(document.createTextNode(this._text));</span><br><span class="line">  var that = this;</span><br><span class="line"></span><br><span class="line">  var arrow = this._arrow = document.createElement(&apos;div&apos;);</span><br><span class="line">  arrow.style.position = &apos;absolute&apos;;</span><br><span class="line">  arrow.style.top = &apos;35px&apos;;</span><br><span class="line">  arrow.style.left = &apos;30px&apos;;</span><br><span class="line">  arrow.style.overflow = &apos;hidden&apos;;</span><br><span class="line">  arrow.style.borderTop = &apos;13px solid #fff&apos;;</span><br><span class="line">  arrow.style.borderLeft = &apos;10px solid transparent&apos;;</span><br><span class="line">  arrow.style.borderRight = &apos;10px solid transparent&apos;;</span><br><span class="line">  div.appendChild(arrow);</span><br><span class="line"></span><br><span class="line">  mp.getPanes().labelPane.appendChild(div);</span><br><span class="line"></span><br><span class="line">  return div;</span><br><span class="line">&#125;</span><br><span class="line">CustomRedCircle.prototype.initialize = function (map) &#123;</span><br><span class="line">  this._map = map;</span><br><span class="line">  let div = this._div = document.createElement(&apos;div&apos;);</span><br><span class="line">  div.style.position = &apos;absolute&apos;;</span><br><span class="line">  div.style.zIndex = BMap.Overlay.getZIndex(this._point.lat);</span><br><span class="line">  div.style.backgroundColor = &apos;#C81528&apos;;</span><br><span class="line">  div.style.width = &apos;17px&apos;;</span><br><span class="line">  div.style.height = &apos;17px&apos;;</span><br><span class="line">  div.style.borderRadius = &apos;17px&apos;;</span><br><span class="line">  mp.getPanes().labelPane.appendChild(div);</span><br><span class="line">  return div;</span><br><span class="line">&#125;</span><br><span class="line">CustomRedCircle.prototype.draw = function () &#123;</span><br><span class="line">  const map = this._map;</span><br><span class="line">  const pixel = map.pointToOverlayPixel(this._point);</span><br><span class="line">  this._div.style.left = pixel.x - 8 + &apos;px&apos;;</span><br><span class="line">  this._div.style.top = pixel.y - 8 + &apos;px&apos;;</span><br><span class="line">&#125;</span><br><span class="line">ComplexCustomOverlay.prototype.draw = function() &#123;</span><br><span class="line">  const map = this._map;</span><br><span class="line">  const pixel = map.pointToOverlayPixel(this._point);</span><br><span class="line">  this._div.style.left = pixel.x - parseInt(this._arrow.style.left) - 10 + &apos;px&apos;;</span><br><span class="line">  this._div.style.top = pixel.y - 50 + &apos;px&apos;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">const myOverlay = new ComplexCustomOverlay(point, &apos;静安区 大宁广场&apos;)</span><br><span class="line">const marker = new CustomRedCircle(point)</span><br><span class="line">mp.addOverlay(myOverlay)</span><br><span class="line">mp.addOverlay(marker)</span><br><span class="line">mp.disableDragging()</span><br><span class="line">mp.disableDoubleClickZoom()</span><br><span class="line">mp.disablePinchToZoom()</span><br></pre></td></tr></table></figure><h4 id="三、At-the-end-of-the-core-code-is-to-disable-the-operation-to-the-map-make-the-map-just-the-meaning-of-show"><a href="#三、At-the-end-of-the-core-code-is-to-disable-the-operation-to-the-map-make-the-map-just-the-meaning-of-show" class="headerlink" title="三、At the end of the core code is to disable the operation to the map,make the map just the meaning of show"></a>三、At the end of the core code is to disable the operation to the map,make the map just the meaning of show</h4><p>  It tooks time to find all the attributes,if you are the first time to use it, you can refer to the document of<br>  <a href="http://lbsyun.baidu.com/cms/jsapi/reference/jsapi_reference.html" target="_blank" rel="noopener">baidu’s map api</a>,it’s useful.</p><p>  If you are familar with it, forget it.</p><h4 id="四、Another-way-to-disable-map-operation"><a href="#四、Another-way-to-disable-map-operation" class="headerlink" title="四、Another way to disable map operation"></a>四、Another way to disable map operation</h4><pre><code>You can make a highest priority mask such as an transparent png image to cover it, this is the method I used in wechat mini program.</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;一、Your-html-looks-like&quot;&gt;&lt;a href=&quot;#一、Your-html-looks-like&quot; class=&quot;headerlink&quot; title=&quot;一、Your html looks like:&quot;&gt;&lt;/a&gt;一、Your html looks l
      
    
    </summary>
    
    
      <category term="baidu-map" scheme="https://summerangel.github.io/tags/baidu-map/"/>
    
  </entry>
  
  <entry>
    <title>Problems records</title>
    <link href="https://summerangel.github.io/2018/05/15/problem-records/"/>
    <id>https://summerangel.github.io/2018/05/15/problem-records/</id>
    <published>2018-05-15T06:48:43.000Z</published>
    <updated>2018-07-11T15:00:34.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="error-in-console-gyp-Call-to-‘-util-has-lib-sh-freetype’-returned-exit-status-0-while-in-binding-gyp-while-trying-to-load-binding-gyp"><a href="#error-in-console-gyp-Call-to-‘-util-has-lib-sh-freetype’-returned-exit-status-0-while-in-binding-gyp-while-trying-to-load-binding-gyp" class="headerlink" title="error in console: gyp: Call to ‘./util/has_lib.sh freetype’ returned exit status 0 while in binding.gyp. while trying to load binding.gyp"></a>error in console: gyp: Call to ‘./util/has_lib.sh freetype’ returned exit status 0 while in binding.gyp. while trying to load binding.gyp</h4><p>solve method: </p><pre><code>npm install -g node-gypbrew install pkg-config cairo libpng jpeg giflib</code></pre><h4 id="error-in-console-BOZZMOB-M-T0HZ-rest-bozzmob-node-helloz-js"><a href="#error-in-console-BOZZMOB-M-T0HZ-rest-bozzmob-node-helloz-js" class="headerlink" title="error in console: BOZZMOB-M-T0HZ:rest bozzmob$ node helloz.js"></a>error in console: BOZZMOB-M-T0HZ:rest bozzmob$ node helloz.js</h4><p>/Users/bozzmob/Documents/work/nextgennms/rest/helloz.js:1<br>(function (exports, require, module, <strong>filename, </strong>dirname) { (async function testingAsyncAwait() {<br>                                                                     ^^^^^^^^<br>SyntaxError: Unexpected token function<br>    at Object.exports.runInThisContext (vm.js:53:16)<br>    at Module._compile (module.js:513:28)<br>    at Object.Module._extensions..js (module.js:550:10)<br>    at Module.load (module.js:458:32)<br>    at tryModuleLoad (module.js:417:12)<br>    at Function.Module._load (module.js:409:3)<br>    at Function.Module.runMain (module.js:575:10)<br>    at startup (node.js:160:18)<br>    at node.js:456:3</p><p> Solve method:  check your node version   node -v (here used es7’s property async)</p><h4 id="安装redis修改权限："><a href="#安装redis修改权限：" class="headerlink" title="安装redis修改权限："></a>安装redis修改权限：</h4><pre><code>Attempted to create a lock file on a read-only directory: /data/db, terminating</code></pre><p>   sudo chown -R $USER /data/db</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;error-in-console-gyp-Call-to-‘-util-has-lib-sh-freetype’-returned-exit-status-0-while-in-binding-gyp-while-trying-to-load-binding-gy
      
    
    </summary>
    
    
      <category term="bugs" scheme="https://summerangel.github.io/tags/bugs/"/>
    
  </entry>
  
  <entry>
    <title>Some simple snippets about mini-programme</title>
    <link href="https://summerangel.github.io/2018/05/07/mini-programme-snippets/"/>
    <id>https://summerangel.github.io/2018/05/07/mini-programme-snippets/</id>
    <published>2018-05-07T14:54:50.000Z</published>
    <updated>2018-05-07T15:28:17.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="一、Remove-the-scroll-bar-in-scroll-view"><a href="#一、Remove-the-scroll-bar-in-scroll-view" class="headerlink" title="一、Remove the scroll bar in scroll-view"></a>一、Remove the scroll bar in scroll-view</h4><pre><code><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">::-webkit-scrollbar &#123;</span><br><span class="line">     width: 0;</span><br><span class="line">     height: 0;</span><br><span class="line">     color: transparent;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></code></pre><h4 id="二、Enable-scroll-in-scroll-view"><a href="#二、Enable-scroll-in-scroll-view" class="headerlink" title="二、Enable scroll in scroll-view"></a>二、Enable scroll in scroll-view</h4><p>  the following css are needed to let the scroll-view to scroll:</p>   <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">width: 100%;</span><br><span class="line">white-space: nowrap;</span><br></pre></td></tr></table></figure><h4 id="三、Change-the-background-color-of-the-whole-page"><a href="#三、Change-the-background-color-of-the-whole-page" class="headerlink" title="三、Change the background-color of the whole page"></a>三、Change the background-color of the whole page</h4><p>   Add following to your css file:</p>   <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Page &#123;</span><br><span class="line">  display: block;</span><br><span class="line">  min-height: 100%;</span><br><span class="line">  background-color: (here is the color you want);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="四、Using-the-unit-of-rpx-to-adjust-different-phone-size"><a href="#四、Using-the-unit-of-rpx-to-adjust-different-phone-size" class="headerlink" title="四、Using the unit of rpx to adjust different phone size"></a>四、Using the unit of rpx to adjust different phone size</h4><p>  The formula of transfer like following, use iphone6 as example:</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1px = 2rpx;</span><br><span class="line">1rem = 750/20;</span><br></pre></td></tr></table></figure><p>   if you want to know more about this, you can step into <a href="http://www.cnblogs.com/fayin/p/6346754.html" target="_blank" rel="noopener">this article</a></p><h4 id="五、May-be-a-bug"><a href="#五、May-be-a-bug" class="headerlink" title="五、May be a bug"></a>五、May be a bug</h4><p>   Don’t add auto-focus to the element input,it will cause the death of your project(the situation I confronted was:<br>   I can’t go back nor scroll the page)</p><h4 id="六、Something-I-always-forget"><a href="#六、Something-I-always-forget" class="headerlink" title="六、Something I always forget"></a>六、Something I always forget</h4><p>   Dynamically give a class to an element:</p>   <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">class=&quot;shopcart &#123;&#123; cartShow ? &apos;show&apos; : &apos;&apos; &#125;&#125;&quot;</span><br></pre></td></tr></table></figure><p>   Add key to a recycle:</p>   <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wx:key=&quot;unique&quot;</span><br></pre></td></tr></table></figure><p>   All above are which I met after completing an static mini-project.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;一、Remove-the-scroll-bar-in-scroll-view&quot;&gt;&lt;a href=&quot;#一、Remove-the-scroll-bar-in-scroll-view&quot; class=&quot;headerlink&quot; title=&quot;一、Remove the scr
      
    
    </summary>
    
    
      <category term="mini-programme" scheme="https://summerangel.github.io/tags/mini-programme/"/>
    
  </entry>
  
  <entry>
    <title>Share good method to transfer files between Mac and iphone</title>
    <link href="https://summerangel.github.io/2018/05/03/about-transfer/"/>
    <id>https://summerangel.github.io/2018/05/03/about-transfer/</id>
    <published>2018-05-03T02:41:59.000Z</published>
    <updated>2018-07-11T15:00:34.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="一、Key-tool-is-AirDrop"><a href="#一、Key-tool-is-AirDrop" class="headerlink" title="一、Key tool is AirDrop"></a>一、Key tool is AirDrop</h4><p>   Ok, the key tool of this method is using AirDrop, hahaha…</p><h4 id="二、Transfer-files-from-iphone-to-Mac"><a href="#二、Transfer-files-from-iphone-to-Mac" class="headerlink" title="二、Transfer files from iphone to Mac"></a>二、Transfer files from iphone to Mac</h4><pre><code>1、Open Finder and click AirDrop on the left, at the bottom of the right area, there shows    &apos;Allow me to be discovered by: &apos;, choose the one says &apos;Everyone&apos;, like the following:</code></pre>   <img src="/2018/05/03/about-transfer/air_drop_one.jpg" title="open AirDrop"><p>   Open AirDrop</p><pre><code>2、Go to the place where you want to send files to Mac, for example: you want to send some    photos to Mac, following are steps:</code></pre>   <img src="/2018/05/03/about-transfer/phone_air_drop_four.jpeg" title="click the red circle button"><p>   Click the red circle area button</p>   <img src="/2018/05/03/about-transfer/phone_air_drop_five.jpeg" title="find the Mac you want to send to"><p>   Find the Mac you want to send to, and then tap it.</p><h4 id="三、Transfer-files-from-Mac-to-iphone"><a href="#三、Transfer-files-from-Mac-to-iphone" class="headerlink" title="三、Transfer files from Mac to iphone"></a>三、Transfer files from Mac to iphone</h4><pre><code>1、Pick up your iphone, open setting --&gt; General --&gt; AirDrop, select Everyone;</code></pre>   <img src="/2018/05/03/about-transfer/phone_air_drop_one.jpeg" title="find the setting and open it"><p>   Find the setting and open it</p>   <img src="/2018/05/03/about-transfer/phone_air_drop_two.jpeg" title="find the General and click it"><p>   Find the General and click it</p>   <img src="/2018/05/03/about-transfer/phone_air_drop_three.jpeg" title="select the Everyone and that" alt="s it"><p>   Select the Everyone and that’s it</p><pre><code>2、Back to your Mac, open Finder and click AirDrop, find the iphone you want to send files to</code></pre>   <img src="/2018/05/03/about-transfer/air_drop_one.jpg" title="open AirDrop"><p>   Ok, an technologyless article is done, hahaha……………..</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;一、Key-tool-is-AirDrop&quot;&gt;&lt;a href=&quot;#一、Key-tool-is-AirDrop&quot; class=&quot;headerlink&quot; title=&quot;一、Key tool is AirDrop&quot;&gt;&lt;/a&gt;一、Key tool is AirDrop&lt;/
      
    
    </summary>
    
    
      <category term="software" scheme="https://summerangel.github.io/tags/software/"/>
    
  </entry>
  
  <entry>
    <title>Try docker in Mac</title>
    <link href="https://summerangel.github.io/2018/04/27/try-docker/"/>
    <id>https://summerangel.github.io/2018/04/27/try-docker/</id>
    <published>2018-04-27T01:49:06.000Z</published>
    <updated>2018-04-27T03:22:39.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="一、Install-docker"><a href="#一、Install-docker" class="headerlink" title="一、Install docker"></a>一、Install docker</h4><p>   Go to docker official website to download the docker app: <a href="https://docs.docker.com/docker-for-mac/install/#download-docker-for-mac" target="_blank" rel="noopener">https://docs.docker.com/docker-for-mac/install/#download-docker-for-mac</a></p><p>   We usually choose the stable one to install;</p><h4 id="二、Test-your-docker"><a href="#二、Test-your-docker" class="headerlink" title="二、Test your docker"></a>二、Test your docker</h4><p>   After you installed your docker, you can test it with the following command:</p><pre><code>docker --versiondocker --infodocker run hello-world</code></pre><h4 id="三、Public-your-git-repo-to-docker"><a href="#三、Public-your-git-repo-to-docker" class="headerlink" title="三、Public your git repo to docker"></a>三、Public your git repo to docker</h4><p>  1、Go to git to copy your git repo link;</p><p>  2、If you want to exclude some files: open your local git repo and create a .dockerignore file in the root directory and put the following info in it;</p><pre><code>.gitnode_modulesnpm-debug.log</code></pre><p>  3、Create a Dockerfile file in root directory and also write the following in it:</p><pre><code>FROM node:8.4COPY . /appWORKDIR /appRUN npm install --registry=https://registry.npm.taobao.orgEXPOSE 3000</code></pre><p>  4、After above finished, you can create an image like following command:</p><pre><code>docker image build -t [here is your repo name] .Ordocker image build -t [repo name]:0.0.1 .</code></pre><p>  5、Container Generate:</p><pre><code>docker container run -p 8000:3000 -it [repo name] /bin/bashOrdocker container run -p 8000:3000 -it [repo name]:0.0.1 /bin/bash</code></pre><p>   you can start your project in docker(execute your project start command,eg: node app.js), and then open the link:<a href="http://127.0.0.1:8000" target="_blank" rel="noopener">http://127.0.0.1:8000</a> in browser,your project is running.</p><p>  6、Ctrl + c: stop node process; Ctrl + d(or input exit): quit the container; also: docker container kill will help;    </p><p>  7、Register a docker Id in <a href="https://hub.docker.com/" target="_blank" rel="noopener">https://hub.docker.com/</a>;</p><p>  8、After registering open your terminal and execute: docker login (make sure your docker app is open and vpn is closed)</p><p>  9、After login</p><pre><code>docker image tag [imageName] [username]/[repository]:[tag]#eg: docker image tag summer-album:0.0.1 summaerangel/summer-album:0.0.1</code></pre><p>  10、Finally, publish the image</p><pre><code>docker image push [username]/[repository]:[tag]</code></pre><p>   then you can see your published image in hub.docker.com</p><h4 id="四、Commands-that-may-used-frequently"><a href="#四、Commands-that-may-used-frequently" class="headerlink" title="四、Commands that may used frequently"></a>四、Commands that may used frequently</h4><pre><code>docker versiondocker infodocker image ls (list all the image)docker image rm [here is your imageName] (delete image file)docker image pull [here is imageName] (pull image file from docker)docker container run [imageName] (run the image in docker)docker container kill [containerId] (kill the running image file)docker container ls (list the running container)docker container ls --all (list all the container, including the killed ones)docker container rm [containerId] (delete the container in the docker)</code></pre><h4 id="五、More-detail-description"><a href="#五、More-detail-description" class="headerlink" title="五、More detail description"></a>五、More detail description</h4><p>   If this is not understandable, you can step into following links:</p><p>   <a href="http://www.ruanyifeng.com/blog/2018/02/docker-tutorial.html" target="_blank" rel="noopener">http://www.ruanyifeng.com/blog/2018/02/docker-tutorial.html</a></p><p>   And</p><p>   <a href="https://docs.docker.com/docker-for-mac" target="_blank" rel="noopener">https://docs.docker.com/docker-for-mac</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;一、Install-docker&quot;&gt;&lt;a href=&quot;#一、Install-docker&quot; class=&quot;headerlink&quot; title=&quot;一、Install docker&quot;&gt;&lt;/a&gt;一、Install docker&lt;/h4&gt;&lt;p&gt;   Go to docke
      
    
    </summary>
    
    
      <category term="docker" scheme="https://summerangel.github.io/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>How to deploy a website on Mac</title>
    <link href="https://summerangel.github.io/2018/04/25/about-deploy/"/>
    <id>https://summerangel.github.io/2018/04/25/about-deploy/</id>
    <published>2018-04-25T10:01:48.000Z</published>
    <updated>2018-04-25T14:28:45.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="一、-Buy-a-CES（购买一台服务器）"><a href="#一、-Buy-a-CES（购买一台服务器）" class="headerlink" title="一、 Buy a CES（购买一台服务器）"></a>一、 Buy a CES（购买一台服务器）</h4><p>  the link is: <a href="https://ecs-buy-cn-huhehaote.aliyun.com/wizard/#/prepay/cn-huhehaote" target="_blank" rel="noopener">https://ecs-buy-cn-huhehaote.aliyun.com/wizard/#/prepay/cn-huhehaote</a></p><h4 id="二、Connect-to-Server（连接服务器）"><a href="#二、Connect-to-Server（连接服务器）" class="headerlink" title="二、Connect to Server（连接服务器）"></a>二、Connect to Server（连接服务器）</h4><p>  After you bought a CES, you will have access to login the server they give you,link this</p>  <img src="/2018/04/25/about-deploy/server_one.jpg" title="the page you will find your public ip"><p>  Open the terminal you usually use, and command following:（打开你常用的终端，输入以下信息）</p><pre><code>ssh root@39.104.121.24(the ip should change to your own public ip 这里的ip应该换成你自己的公网ip)after executing this,the terminal will let you input the passwordthen you will connect to the server;</code></pre><h4 id="三、Install-Node（安装Node）"><a href="#三、Install-Node（安装Node）" class="headerlink" title="三、Install Node（安装Node）"></a>三、Install Node（安装Node）</h4><p>   1、The download link: <a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">https://nodejs.org/en/download/</a></p><p>   we usually choose the source code to install,for it’s better.Click right press and copy the download link;<br>   （我们一般选择source code安装，因为听说更好一点。点击右键复制地址）</p><p>   2、Then we back to the connected server,and to the root directory,and create a empty directory to store all soft we need </p><p>   to install.</p><p>   you can act like this: 1) cd / (this means to the root directory)<br>                          2) mkdir soft (create a directory named soft)</p><p>   3、exectute this in terminal: wget (here is the link you copied in step 1);</p><p>   4、decompression the file in step 3: tar -zxvf (here is compressed file name)</p><p>   5、execute this in terminal: cd (decompressed file name) &amp;&amp; ./configure ;</p><p>   6、execute this in terminal: make &amp;&amp; make install;</p><p>   7、execute this to see if you installed node successfully: node -v or npm -v;</p><p>   8、if you met a problem link:  g++: Command not found, you could execute this to fix: yum install gcc gcc-c++,then repeat<br>      step 7;</p><h4 id="四、Install-nrm-and-pm2"><a href="#四、Install-nrm-and-pm2" class="headerlink" title="四、Install nrm and pm2"></a>四、Install nrm and pm2</h4><p>   1、execute this in terminal: npm install -g cnpm –registry=<a href="https://registry.npm.taobao.org" target="_blank" rel="noopener">https://registry.npm.taobao.org</a></p><p>   2、execute this in terminal: npm install -g nrm</p><p>   3、execute this in terminal: npm install -g pm2</p><p>   4、start a pm2 process: pm2 start index.js<br>      restart a pm2 process: pm2 restart id/name;<br>      delete a pm2 process: pm2 delete id/name;<br>      review a pm2 process: pm2 moint;<br>      review all pm2 processes: pm2 list;</p><h4 id="五、Install-Nginx"><a href="#五、Install-Nginx" class="headerlink" title="五、Install Nginx"></a>五、Install Nginx</h4><p>   1、before install nginx, we should install some nginx dependencies;</p><p>   2、execute this in terminal: yum install -y pcre pcre-devel</p><p>   3、execute this in terminal: yum install -y zlib zlib-devel</p><p>   4、execute this in terminal: yum install -y openssl openssl-devel</p><p>   5、go to nginx official website to copy the download link: <a href="https://nginx.org/en/download.html" target="_blank" rel="noopener">https://nginx.org/en/download.html</a></p><p>   6、execute this in terminal: wget (here is the link copied in step 5)</p><p>   7、execute this in terminal: tar -zxvf (here is the compressed file directory) &amp;&amp; cd (here is the decompressed file directory)</p><p>   9、execute this in terminal: ./configure</p><p>   10、execute this in terminal: make &amp;&amp; make install</p><p>   11、to see where the nginx is: whereis nginx</p><p>   12、to go to sbin directory: cd /usr/local/nginx/sbin</p><p>   13、start nginx: ./nginx</p><pre><code>start nginx: ./nginxstop nginx: ./nginx -s stopquit nginx: ./nginx -s quitreload nginx: ./nginx -s reload</code></pre><h4 id="六、Install-Git"><a href="#六、Install-Git" class="headerlink" title="六、Install Git"></a>六、Install Git</h4><p>   1、execute this in terminal: yum install git</p><p>   2、make sure is the git install done: git –version</p><h4 id="七、repo-in-git-connect-to-server"><a href="#七、repo-in-git-connect-to-server" class="headerlink" title="七、repo in git connect to server"></a>七、repo in git connect to server</h4><p>   1、cd soft</p><p>   2、git clone (here is the git repo link)</p><p>   3、cd (the git repo name)</p><p>   4、npm i</p><p>   5、npm start(according to your repo)</p><p>   6、open the browser with the url: <a href="http://39.104.121.24:3000" target="_blank" rel="noopener">http://39.104.121.24:3000</a> (replace the ip with your own public ip)</p><h4 id="八、Mistake-I-make"><a href="#八、Mistake-I-make" class="headerlink" title="八、Mistake I make"></a>八、Mistake I make</h4><p>   Because I didn’t add port 3000 to the secure group,I can’t open the link with port 3000 :<a href="http://39.104.121.24:3000。" target="_blank" rel="noopener">http://39.104.121.24:3000。</a></p>   <img src="/2018/04/25/about-deploy/server_two.jpeg" title="the page you add your port to secure group"><p>   and may be this article will solve something: <a href="https://www.jianshu.com/p/9a0f356f89ca" target="_blank" rel="noopener">https://www.jianshu.com/p/9a0f356f89ca</a></p><h4 id="九、if-you-want-to-know-more-detail-describe"><a href="#九、if-you-want-to-know-more-detail-describe" class="headerlink" title="九、if you want to know more detail describe"></a>九、if you want to know more detail describe</h4><p>  here is the origin website to introduce more: <a href="http://gitbook.cn/books/5a561cfca8b23d387720befc/index.html" target="_blank" rel="noopener">http://gitbook.cn/books/5a561cfca8b23d387720befc/index.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;一、-Buy-a-CES（购买一台服务器）&quot;&gt;&lt;a href=&quot;#一、-Buy-a-CES（购买一台服务器）&quot; class=&quot;headerlink&quot; title=&quot;一、 Buy a CES（购买一台服务器）&quot;&gt;&lt;/a&gt;一、 Buy a CES（购买一台服务器）&lt;/
      
    
    </summary>
    
    
      <category term="deploy" scheme="https://summerangel.github.io/tags/deploy/"/>
    
  </entry>
  
  <entry>
    <title>create-project-related-git</title>
    <link href="https://summerangel.github.io/2018/04/23/create-project-related-git/"/>
    <id>https://summerangel.github.io/2018/04/23/create-project-related-git/</id>
    <published>2018-04-23T10:16:13.000Z</published>
    <updated>2018-07-11T15:00:34.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="avoid-forgetting-every-time-forgot-how-to-do"><a href="#avoid-forgetting-every-time-forgot-how-to-do" class="headerlink" title="avoid forgetting(every time forgot how to do)"></a>avoid forgetting(every time forgot how to do)</h4><p>1、 Step One: create a repo on github first, then copy the https’s url;</p><p>2、 Step Two: under your local project folder’s root path execute: git init;</p><p>3、 Step Three: then execute: git add .</p><p>4、 Step Four: then execute: git commit -m “here is some comment about what will be committed”;</p><p>5、 Step Five: then execute: git remote add origin (here is the url copied in step one);</p><p>6、 Step Six: then execute: git pull origin master</p><pre><code>if you confront this problem: fatal: refusing to merge unrelated histories.you can execute this command like this: git pull origin master --allow-unrelated-histories</code></pre><p>7、 Step Seven: then execute: git push -u origin master</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;avoid-forgetting-every-time-forgot-how-to-do&quot;&gt;&lt;a href=&quot;#avoid-forgetting-every-time-forgot-how-to-do&quot; class=&quot;headerlink&quot; title=&quot;avoi
      
    
    </summary>
    
    
      <category term="git" scheme="https://summerangel.github.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>about-svn</title>
    <link href="https://summerangel.github.io/2018/01/25/about-svn/"/>
    <id>https://summerangel.github.io/2018/01/25/about-svn/</id>
    <published>2018-01-25T13:30:12.000Z</published>
    <updated>2018-07-11T15:00:34.000Z</updated>
    
    <content type="html"><![CDATA[<p>open ~/.npmrc</p><h4 id="just-simple-use-about-svn"><a href="#just-simple-use-about-svn" class="headerlink" title="just simple use about svn"></a>just simple use about svn</h4><pre><code>1、从线上地址拷贝代码到本地：svn checkout (线上地址);2、更新本地的svn中的代码：svn up;3、更改npm的源：打开.npmrc文件：open ~/.npmrc；4、查看文件：cat package.json把下列代码复制进.npmrc文件中： sass_binary_site=https://npm.taobao.org/mirrors/node-sass/ phantomjs_cdnurl=http://cnpmjs.org/downloads electron_mirror=https://npm.taobao.org/mirrors/electron/ python_mirror=https://npm.taobao.org/mirrors/python</code></pre><p>  以上，安装依赖时会快很多。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;open ~/.npmrc&lt;/p&gt;
&lt;h4 id=&quot;just-simple-use-about-svn&quot;&gt;&lt;a href=&quot;#just-simple-use-about-svn&quot; class=&quot;headerlink&quot; title=&quot;just simple use about
      
    
    </summary>
    
    
      <category term="svn" scheme="https://summerangel.github.io/tags/svn/"/>
    
  </entry>
  
</feed>
